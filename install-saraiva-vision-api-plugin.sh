#!/bin/bash

echo "=================================================="
echo "üè• INSTALANDO PLUGIN SARAIVA VISION API ENHANCER"
echo "=================================================="
echo ""

# 1. Verificar se estamos no diret√≥rio correto
if [ ! -f "wp-config.php" ]; then
    echo "‚ùå ERRO: wp-config.php n√£o encontrado. Execute este script no diret√≥rio raiz do WordPress."
    exit 1
fi

# 2. Copiar plugin para o diret√≥rio de plugins
echo "1. Instalando plugin Saraiva Vision API Enhancer..."
PLUGIN_DIR="wp-content/plugins/saraiva-vision-api-enhancer"

if [ -d "$PLUGIN_DIR" ]; then
    echo "   ‚Ä¢ Removendo vers√£o anterior do plugin..."
    rm -rf "$PLUGIN_DIR"
fi

mkdir -p "$PLUGIN_DIR"
cp saraiva-vision-api-enhancer.php "$PLUGIN_DIR/"
echo "   ‚úÖ Plugin copiado com sucesso!"

# 3. Ativar o plugin via WP-CLI
echo ""
echo "2. Ativando plugin..."

# Verificar se WP-CLI est√° dispon√≠vel
if command -v wp &> /dev/null; then
    wp plugin activate saraiva-vision-api-enhancer --allow-root
    echo "   ‚úÖ Plugin ativado via WP-CLI!"
else
    echo "   ‚ö†Ô∏è  WP-CLI n√£o encontrado. Plugin precisa ser ativado manualmente no admin WordPress."
    echo "   URL do admin: https://saraivavision.com.br/blog/wp-admin/plugins.php"
fi

# 4. Testar endpoints customizados
echo ""
echo "3. Testando endpoints da API Saraiva Vision..."

# URL base
BASE_URL="https://saraivavision.com.br"

echo "   ‚Ä¢ Testando endpoint de sa√∫de..."
HEALTH_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/saraiva-vision/v1/health" -o /dev/null)
if [ "$HEALTH_RESPONSE" = "200" ]; then
    echo "     ‚úÖ Endpoint de sa√∫de funcionando!"
else
    echo "     ‚ùå Endpoint de sa√∫de retornou: $HEALTH_RESPONSE"
fi

echo "   ‚Ä¢ Testando servi√ßos oftalmol√≥gicos..."
SERVICOS_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/saraiva-vision/v1/servicos-oftalmologicos?per_page=3" -o /dev/null)
if [ "$SERVICOS_RESPONSE" = "200" ]; then
    echo "     ‚úÖ Endpoint de servi√ßos oftalmol√≥gicos funcionando!"
else
    echo "     ‚ùå Endpoint de servi√ßos retornou: $SERVICOS_RESPONSE"
fi

echo "   ‚Ä¢ Testando equipe m√©dica..."
EQUIPE_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/saraiva-vision/v1/equipe-medica" -o /dev/null)
if [ "$EQUIPE_RESPONSE" = "200" ]; then
    echo "     ‚úÖ Endpoint de equipe m√©dica funcionando!"
else
    echo "     ‚ùå Endpoint de equipe retornou: $EQUIPE_RESPONSE"
fi

echo "   ‚Ä¢ Testando exames e procedimentos..."
EXAMES_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/saraiva-vision/v1/exames-procedimentos" -o /dev/null)
if [ "$EXAMES_RESPONSE" = "200" ]; then
    echo "     ‚úÖ Endpoint de exames funcionando!"
else
    echo "     ‚ùå Endpoint de exames retornou: $EXAMES_RESPONSE"
fi

# 5. Testar endpoints principais
echo ""
echo "4. Validando endpoints principais..."
POSTS_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/wp/v2/posts?per_page=3" -o /dev/null)
if [ "$POSTS_RESPONSE" = "200" ]; then
    echo "   ‚úÖ Endpoint de posts funcionando!"
    TOTAL_POSTS=$(curl -s "$BASE_URL/wp-json/wp/v2/posts" | jq -r '.[] | .title.rendered' | wc -l)
    echo "   üìä Total de posts dispon√≠veis: $TOTAL_POSTS"
else
    echo "   ‚ùå Endpoint de posts retornou: $POSTS_RESPONSE"
fi

CATEGORIES_RESPONSE=$(curl -s -w "%{http_code}" "$BASE_URL/wp-json/wp/v2/categories" -o /dev/null)
if [ "$CATEGORIES_RESPONSE" = "200" ]; then
    echo "   ‚úÖ Endpoint de categorias funcionando!"
else
    echo "   ‚ùå Endpoint de categorias retornou: $CATEGORIES_RESPONSE"
fi

# 6. Mostrar resumo dos endpoints dispon√≠veis
echo ""
echo "5. Resumo dos endpoints dispon√≠veis:"
echo "   üåê Base API: $BASE_URL/wp-json/"
echo "   üìù Posts: $BASE_URL/wp-json/wp/v2/posts"
echo "   üìÇ Categorias: $BASE_URL/wp-json/wp/v2/categories"
echo "   üë®‚Äç‚öïÔ∏è Sa√∫de da API: $BASE_URL/wp-json/saraiva-vision/v1/health"
echo "   üè• Servi√ßos Oftalmol√≥gicos: $BASE_URL/wp-json/saraiva-vision/v1/servicos-oftalmologicos"
echo "   üë• Equipe M√©dica: $BASE_URL/wp-json/saraiva-vision/v1/equipe-medica"
echo "   üî¨ Exames: $BASE_URL/wp-json/saraiva-vision/v1/exames-procedimentos"

echo ""
echo "=================================================="
echo "‚úÖ INSTALA√á√ÉO CONCLU√çDA!"
echo "=================================================="
echo ""
echo "üè• Cl√≠nica Saraiva Vision - API Oftalmol√≥gica Configurada"
echo "üë®‚Äç‚öïÔ∏è Dr. Philipe Saraiva Cruz - CRM-MG 69.870"
echo "üìç Caratinga, MG"
echo ""
echo "üìå Pr√≥ximos passos:"
echo "   1. Se WP-CLI n√£o estava dispon√≠vel, ative o plugin manualmente no admin"
echo "   2. Teste os endpoints no seu frontend React"
echo "   3. Configure o cache CDN para melhor performance"
echo ""
echo "üîß Links √∫teis:"
echo "   ‚Ä¢ Admin WordPress: https://saraivavision.com.br/blog/wp-admin/"
echo "   ‚Ä¢ Teste API: curl $BASE_URL/wp-json/saraiva-vision/v1/health"
echo ""