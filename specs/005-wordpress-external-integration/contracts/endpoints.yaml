# External WordPress Integration API Endpoints

openapi: 3.0.3
info:
  title: Saraiva Vision External WordPress Integration API
  description: API for managing external WordPress content sources and cached content
  version: 1.0.0
  contact:
    name: Saraiva Vision Development Team
    email: dev@saraivavision.com.br

servers:
  - url: https://saraivavision.com.br/api/external-wordpress
    description: Production server
  - url: http://localhost:3001/api/external-wordpress
    description: Development server

security:
  - BearerAuth: []

paths:
  # Source Management
  /sources:
    get:
      summary: List external WordPress sources
      description: Retrieve a paginated list of configured external WordPress sources
      operationId: listSources
      tags:
        - Sources
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, error]
        - name: search
          in: query
          schema:
            type: string
            description: Search by name or base URL
      responses:
        '200':
          description: Successful response with paginated sources list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExternalWordPressSource'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      summary: Create external WordPress source
      description: Add a new external WordPress source to the system
      operationId: createSource
      tags:
        - Sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSourceRequest'
      responses:
        '201':
          description: Source created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalWordPressSource'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          description: Source with this base URL already exists
        '500':
          $ref: '#/components/responses/ServerError'

  /sources/{sourceId}:
    get:
      summary: Get external WordPress source
      description: Retrieve details of a specific external WordPress source
      operationId: getSource
      tags:
        - Sources
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalWordPressSource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      summary: Update external WordPress source
      description: Update configuration of an existing external WordPress source
      operationId: updateSource
      tags:
        - Sources
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceRequest'
      responses:
        '200':
          description: Source updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalWordPressSource'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete external WordPress source
      description: Remove an external WordPress source and all associated cached content
      operationId: deleteSource
      tags:
        - Sources
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: Source deleted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  # Content Management
  /sources/{sourceId}/content:
    get:
      summary: Get cached content from source
      description: Retrieve cached WordPress content from an external source
      operationId: getSourceContent
      tags:
        - Content
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
        - name: content_type
          in: query
          schema:
            type: string
            enum: [post, page, media, category, tag]
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum: [publish, draft, pending, private]
        - name: search
          in: query
          schema:
            type: string
        - name: force_refresh
          in: query
          schema:
            type: boolean
            default: false
            description: Force refresh from external source
      responses:
        '200':
          description: Successful response with cached content
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExternalContentItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  cache_info:
                    type: object
                    properties:
                      cached_at:
                        type: string
                        format: date-time
                      expires_at:
                        type: string
                        format: date-time
                      cache_hits:
                        type: integer
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /sources/{sourceId}/content/{contentId}:
    get:
      summary: Get specific content item
      description: Retrieve a specific cached content item by its external ID
      operationId: getContentItem
      tags:
        - Content
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
        - name: force_refresh
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalContentItem'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  # Synchronization Operations
  /sources/{sourceId}/sync:
    post:
      summary: Trigger manual synchronization
      description: Manually trigger content synchronization from external source
      operationId: triggerSync
      tags:
        - Synchronization
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Sync triggered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  sync_id:
                    type: string
                  estimated_duration:
                    type: integer
                    description: Estimated duration in seconds
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/ServerError'

  /sources/{sourceId}/invalidate-cache:
    post:
      summary: Invalidate source cache
      description: Clear all cached content for a specific source
      operationId: invalidateCache
      tags:
        - Cache
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Cache invalidated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  invalidated_items:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  # Health and Monitoring
  /sources/{sourceId}/health:
    get:
      summary: Get source health status
      description: Check health status of an external WordPress source
      operationId: getSourceHealth
      tags:
        - Health
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Health status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  last_check:
                    type: string
                    format: date-time
                  response_time:
                    type: integer
                    description: Response time in milliseconds
                  details:
                    type: object
                  recommendations:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  # Webhooks
  /webhooks/wordpress:
    post:
      summary: WordPress webhook handler
      description: Handle webhook events from external WordPress sites
      operationId: handleWebhook
      tags:
        - Webhooks
      security: [] # No authentication for webhooks, validated via secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum: [post_created, post_updated, post_deleted, media_added, media_deleted]
                data:
                  type: object
                site_url:
                  type: string
                  format: uri
                timestamp:
                  type: string
                  format: date-time
                signature:
                  type: string
                  description: HMAC signature for verification
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          description: Invalid webhook signature
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  # Search and Discovery
  /content/search:
    get:
      summary: Search across all external content
      description: Search content from all configured external WordPress sources
      operationId: searchContent
      tags:
        - Search
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 1
        - name: source_ids
          in: query
          schema:
            type: string
            description: Comma-separated list of source IDs
        - name: content_types
          in: query
          schema:
            type: string
            description: Comma-separated list of content types
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
            schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: sort
          in: query
          schema:
            type: string
            enum: [relevance, date, title]
            default: relevance
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExternalContentItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  search_info:
                    type: object
                    properties:
                      query:
                        type: string
                      total_results:
                        type: integer
                      search_time:
                        type: number
                        description: Search time in milliseconds
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ExternalWordPressSource:
      allOf:
        - $ref: '#/components/schemas/BaseExternalWordPressSource'
        - type: object
          properties:
            id:
              type: integer
              minimum: 1
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time

    BaseExternalWordPressSource:
      type: object
      required:
        - name
        - base_url
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        base_url:
          type: string
          format: uri
        api_key:
          type: string
        status:
          type: string
          enum: [active, inactive, error]
          default: active
        last_sync:
          type: string
          format: date-time
        sync_frequency:
          type: string
          pattern: ^\d+\s+(seconds?|minutes?|hours?|days?)$
          default: 5 minutes
        max_posts_per_sync:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100
        cache_ttl:
          type: integer
          minimum: 60
          maximum: 86400
          default: 300
        enable_webhooks:
          type: boolean
          default: false
        webhook_secret:
          type: string
        enable_ssl_verification:
          type: boolean
          default: true
        enable_compliance_filter:
          type: boolean
          default: true
        rate_limit_requests:
          type: integer
          minimum: 10
          maximum: 10000
          default: 1000
        rate_limit_window:
          type: integer
          minimum: 60
          maximum: 86400
          default: 3600
        wordpress_version:
          type: string
        rest_api_version:
          type: string
          enum: [v1, v2]
          default: v2
        supported_post_types:
          type: array
          items:
            type: string
          default: [post, page]
        supported_taxonomies:
          type: array
          items:
            type: string
          default: [category, tag]
        health_check_url:
          type: string
          format: uri
        health_check_interval:
          type: integer
          minimum: 60
          maximum: 3600
          default: 300
        last_health_check:
          type: string
          format: date-time
        health_status:
          type: string
          enum: [healthy, degraded, unhealthy]

    CreateSourceRequest:
      type: object
      required:
        - name
        - base_url
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        base_url:
          type: string
          format: uri
        api_key:
          type: string
        sync_frequency:
          type: string
          pattern: ^\d+\s+(seconds?|minutes?|hours?|days?)$
        max_posts_per_sync:
          type: integer
          minimum: 1
          maximum: 1000
        cache_ttl:
          type: integer
          minimum: 60
          maximum: 86400
        enable_webhooks:
          type: boolean
        webhook_secret:
          type: string
          minLength: 16
        enable_ssl_verification:
          type: boolean
        enable_compliance_filter:
          type: boolean

    UpdateSourceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        api_key:
          type: string
        status:
          type: string
          enum: [active, inactive, error]
        sync_frequency:
          type: string
          pattern: ^\d+\s+(seconds?|minutes?|hours?|days?)$
        max_posts_per_sync:
          type: integer
          minimum: 1
          maximum: 1000
        cache_ttl:
          type: integer
          minimum: 60
          maximum: 86400
        enable_webhooks:
          type: boolean
        webhook_secret:
          type: string
          minLength: 16
        enable_ssl_verification:
          type: boolean
        enable_compliance_filter:
          type: boolean
        rate_limit_requests:
          type: integer
          minimum: 10
          maximum: 10000
        rate_limit_window:
          type: integer
          minimum: 60
          maximum: 86400

    ExternalContentItem:
      type: object
      required:
        - id
        - source_id
        - content_type
        - external_id
        - content
        - cached_at
        - expires_at
      properties:
        id:
          type: integer
          minimum: 1
        source_id:
          type: integer
          minimum: 1
        content_type:
          type: string
          enum: [post, page, media, category, tag]
        external_id:
          type: integer
          minimum: 1
        content:
          type: object
          description: WordPress content object (varies by content_type)
        cached_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        last_modified:
          type: string
          format: date-time
        etag:
          type: string
        title:
          type: string
        slug:
          type: string
        author_id:
          type: integer
          minimum: 1
        published_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [publish, draft, pending, private]
        compliance_score:
          type: integer
          minimum: 0
          maximum: 100
        compliance_filtered:
          type: boolean
        compliance_issues:
          type: array
          items:
            type: object
        cache_hits:
          type: integer
          minimum: 0
        last_accessed:
          type: string
          format: date-time
        response_time:
          type: integer
          minimum: 0

    Pagination:
      type: object
      required:
        - page
        - per_page
        - total
        - total_pages
      properties:
        page:
          type: integer
          minimum: 1
        per_page:
          type: integer
          minimum: 1
          maximum: 100
        total:
          type: integer
          minimum: 0
        total_pages:
          type: integer
          minimum: 0
        has_next:
          type: boolean
        has_prev:
          type: boolean

  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  details:
                    type: object

    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string

    RateLimitError:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  retry_after:
                    type: integer
                    description: Seconds to wait before retrying

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  request_id:
                    type: string

tags:
  - name: Sources
    description: External WordPress source management
  - name: Content
    description: External content management and retrieval
  - name: Synchronization
    description: Content synchronization operations
  - name: Cache
    description: Cache management operations
  - name: Health
    description: Health monitoring and status checks
  - name: Webhooks
    description: Webhook event handling
  - name: Search
    description: Cross-source content search