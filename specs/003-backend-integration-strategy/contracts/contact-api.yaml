openapi: 3.0.3
info:
  title: Contact Form API
  description: API for handling contact form submissions from medical clinic website
  version: 1.0.0
  contact:
    name: Saraiva Vision API Support
    email: tech@saraivavision.com.br

servers:
  - url: https://saraivavision.com.br/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server

paths:
  /contact:
    post:
      summary: Submit contact form
      description: Submit a new contact form inquiry from website visitors
      operationId: submitContact
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactSubmission'
            examples:
              appointment_inquiry:
                summary: Appointment inquiry
                value:
                  name: "Maria Silva"
                  email: "maria.silva@email.com"
                  phone: "+5511999887766"
                  subject: "Consulta Oftalmológica"
                  message: "Gostaria de agendar uma consulta para exame de vista."
                  source: "website"
              general_info:
                summary: General information request
                value:
                  name: "João Santos"
                  email: "joao@email.com"
                  subject: "Informações sobre cirurgia"
                  message: "Preciso de informações sobre cirurgia de catarata."
      responses:
        '200':
          description: Contact form submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
              examples:
                success:
                  value:
                    success: true
                    message: "Contato enviado com sucesso. Retornaremos em até 24 horas."
                    id: "123e4567-e89b-12d3-a456-426614174000"
                    status: "pending"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  value:
                    success: false
                    error: "Dados inválidos"
                    details:
                      - field: "email"
                        message: "Email deve ter formato válido"
                      - field: "message"
                        message: "Mensagem deve ter pelo menos 10 caracteres"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /contact/{id}:
    get:
      summary: Get contact submission details
      description: Retrieve details of a specific contact submission (admin only)
      operationId: getContact
      tags:
        - Contact
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Contact submission ID
      responses:
        '200':
          description: Contact submission details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDetails'
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Contact submission not found

  /contact/{id}/status:
    patch:
      summary: Update contact submission status
      description: Update the status of a contact submission (staff only)
      operationId: updateContactStatus
      tags:
        - Contact
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDetails'
        '400':
          description: Invalid status transition
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions

components:
  schemas:
    ContactSubmission:
      type: object
      required:
        - name
        - email
        - message
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 255
          description: Full name of the person submitting the form
          example: "Maria Silva"
        email:
          type: string
          format: email
          maxLength: 255
          description: Email address for response
          example: "maria.silva@email.com"
        phone:
          type: string
          pattern: '^(\+55)?\s?\(?[1-9]\d\)?\s?\d{4,5}[-\s]?\d{4}$'
          description: Brazilian phone number (optional)
          example: "+5511999887766"
        subject:
          type: string
          maxLength: 255
          description: Subject of the inquiry (optional)
          example: "Consulta Oftalmológica"
        message:
          type: string
          minLength: 10
          maxLength: 2000
          description: Main message content
          example: "Gostaria de agendar uma consulta para exame de vista."
        source:
          type: string
          enum: ["website", "whatsapp", "phone", "referral"]
          default: "website"
          description: Source of the contact submission

    ContactResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Contato enviado com sucesso. Retornaremos em até 24 horas."
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum: ["pending", "in_progress", "resolved", "archived"]
          example: "pending"

    ContactDetails:
      allOf:
        - $ref: '#/components/schemas/ContactSubmission'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            status:
              type: string
              enum: ["pending", "in_progress", "resolved", "archived"]
            priority:
              type: string
              enum: ["low", "normal", "high", "urgent"]
            processed_by:
              type: string
              format: uuid
              nullable: true
            processed_at:
              type: string
              format: date-time
              nullable: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            metadata:
              type: object
              additionalProperties: true

    StatusUpdate:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: ["pending", "in_progress", "resolved", "archived"]
        priority:
          type: string
          enum: ["low", "normal", "high", "urgent"]
        notes:
          type: string
          maxLength: 1000
          description: Internal notes about the status change

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Dados inválidos"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token from Supabase authentication

security:
  - BearerAuth: []

tags:
  - name: Contact
    description: Contact form submission and management