# Configuração nginx para deploy local com SSL - ATUALIZADA
# Arquivo para ser copiado para /etc/nginx/sites-available/saraivavisao

## Rate limiting zones
limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

# Map for real IP detection
map $http_x_forwarded_for $real_ip {
    ~^(\d+\.\d+\.\d+\.\d+) $1;
    default $remote_addr;
}

# HTTP - Redirect para HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge para certificados SSL
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # Redirect para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Configuração principal
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # Enhanced SSL Configuration
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:TLS:50m;
    ssl_session_tickets off;
    # OCSP stapling disabled by default to avoid warnings when chain lacks responder URL.
    # Enable only if your certificate chain provides OCSP responder endpoints.
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # Root do projeto - aponta para dist gerado pelo Vite
    root /var/www/saraivavisao/saraivavision;
    index index.html;

    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Includes compartilhados (alinhado com nginx.conf principal)
    include /etc/nginx/includes/security-headers.conf;
    include /etc/nginx/includes/csp.conf;
    include /etc/nginx/includes/gzip.conf;

    # JavaScript modules MIME type fix
    location ~* \.m?js$ {
        add_header Content-Type "text/javascript; charset=utf-8" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # JSON files
    location ~* \.json$ {
        add_header Content-Type "application/json; charset=utf-8" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Static assets caching
    location ~* \.(?:css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # API proxy para servidor local (Node.js na porta 3001)
    location /api/ {
        limit_req zone=req_limit burst=20 nodelay;
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # SPA fallback - importante para React Router
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Deny hidden/sensitive files
    location ~ /\. { deny all; }
    location ~ /(package\.json|yarn\.lock|package-lock\.json|\.env.*|docker-compose.*|Dockerfile) { deny all; }
}

# HTTP para localhost (desenvolvimento local)
server {
    listen 80;
    server_name localhost;

    # Root do projeto - aponta para dist gerado pelo Vite
    root /var/www/saraivavisao/saraivavision;
    index index.html;

    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Headers básicos para localhost
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # API proxy
    location /api/ {
        limit_req zone=req_limit burst=20 nodelay;
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
}
