# Nginx Configuration for WordPress Integration
# Saraiva Vision Medical Website - Unified Proxy Configuration
# Handles: React Frontend + WordPress CMS + Node.js API

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration for Medical Compliance
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format medical_audit '$time_iso8601|$remote_addr|$request|$status|'
                            '$body_bytes_sent|$request_time|$http_user_agent|'
                            '$http_x_forwarded_for|$upstream_addr|$upstream_response_time';

    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/medical_audit.log medical_audit;

    # Performance Optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting for Medical System Protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=wp_admin:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=wp_login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=contact:10m rate=10r/m;

    # Security Headers for Medical Data Protection
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # LGPD Compliance Headers
    add_header X-Content-Security-Policy "default-src 'self'" always;
    add_header X-LGPD-Compliant "true" always;

    # Upstream Definitions
    upstream wordpress_backend {
        server wordpress:9000;
        keepalive 16;
    }

    upstream api_backend {
        server api:3002;
        keepalive 16;

        # Health checking
        server api:3002 max_fails=3 fail_timeout=30s;
    }

    # Main Server Configuration
    server {
        listen 80;
        listen [::]:80;
        server_name saraivavision.com.br www.saraivavision.com.br localhost;
        root /var/www/html;
        index index.html index.php;

        # ACME Challenge for SSL
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"nginx","timestamp":"$time_iso8601","medical_system":"saraiva-vision"}';
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # WordPress Admin Interface
        location ^~ /wp-admin/ {
            try_files $uri $uri/ @wordpress;

            # Enhanced security for medical admin area
            limit_req zone=wp_admin burst=10 nodelay;

            # Medical system admin headers
            add_header X-Medical-Admin "true" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate, private" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
        }

        # WordPress Login
        location ^~ /wp-login.php {
            try_files $uri @wordpress;

            # Strict rate limiting for login
            limit_req zone=wp_login burst=3 nodelay;

            # Additional security headers
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
        }

        # WordPress JSON API
        location ^~ /wp-json/ {
            try_files $uri $uri/ @wordpress;

            # API rate limiting
            limit_req zone=api burst=20 nodelay;

            # CORS headers for API access
            add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }

        # WordPress Content and Uploads
        location ^~ /wp-content/ {
            try_files $uri @wordpress;

            # Long-term caching for medical content
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # Security for uploaded files
            location ~* \.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # WordPress Includes (block direct access)
        location ^~ /wp-includes/ {
            location ~* \.(php|php5|phtml)$ {
                deny all;
            }

            try_files $uri @wordpress;
            expires 30d;
            add_header Cache-Control "public";
        }

        # Node.js API Backend
        location ^~ /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Medical-System "saraiva-vision";
            proxy_cache_bypass $http_upgrade;

            # Timeouts for medical system reliability
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Rate limiting for API endpoints
            limit_req zone=api burst=15 nodelay;

            # Medical API security headers
            add_header X-API-Source "saraiva-backend" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate, private" always;
        }

        # Contact Form (Medical Data Collection)
        location ^~ /api/contact {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-LGPD-Endpoint "contact" always;

            # Enhanced rate limiting for contact forms
            limit_req zone=contact burst=5 nodelay;

            # LGPD compliance headers
            add_header X-Data-Processing "medical-contact" always;
            add_header X-Audit-Log "enabled" always;
        }

        # Static Files (React Frontend)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # Try React build first, then WordPress
            try_files $uri @wordpress;

            # Security headers for static content
            add_header X-Content-Source "frontend" always;
        }

        # React Router SPA Fallback
        location / {
            try_files $uri $uri/ @react_fallback;

            # No caching for HTML files
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # React SPA Fallback
        location @react_fallback {
            try_files /index.html @wordpress;

            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header X-Served-By "react-frontend" always;
        }

        # WordPress PHP Processing
        location @wordpress {
            fastcgi_pass wordpress_backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
            include fastcgi_params;

            # Medical WordPress specific parameters
            fastcgi_param WORDPRESS_DB_HOST mysql:3306;
            fastcgi_param REDIS_HOST redis:6379;
            fastcgi_param MEDICAL_SYSTEM_MODE true;
            fastcgi_param LGPD_COMPLIANCE_MODE true;

            # FastCGI timeouts for medical content
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
            fastcgi_buffer_size 64k;
            fastcgi_buffers 4 64k;
            fastcgi_busy_buffers_size 128k;

            # Medical WordPress headers
            add_header X-Content-Source "wordpress" always;
            add_header X-Medical-CMS "wordpress" always;
        }

        # Block access to sensitive WordPress files
        location ~* /wp-config\.php$ { deny all; }
        location ~* /wp-admin/install\.php$ { deny all; }
        location ~* /readme\.html$ { deny all; }
        location ~* /readme\.txt$ { deny all; }
        location ~* /wp-config-sample\.php$ { deny all; }
        location ~* /\.ht { deny all; }
        location ~* /\.user\.ini { deny all; }
        location ~* /\.git { deny all; }

        # Medical system security: Block sensitive file types
        location ~* \.(sql|tar|tgz|gz|zip|rar|7z)$ { deny all; }
        location ~* \.(log|ini|conf)$ { deny all; }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
            add_header X-Error-Page "nginx-default" always;
        }
    }

    # HTTPS Server (SSL Configuration)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name saraivavision.com.br www.saraivavision.com.br;
        root /var/www/html;
        index index.html index.php;

        # SSL Configuration for Medical Data Protection
        ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;

        # Strong SSL Configuration for Healthcare
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # HSTS for Medical Security
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Medical system specific security headers
        add_header X-Medical-SSL "enforced" always;
        add_header X-Healthcare-Security "enabled" always;

        # Include all location blocks from HTTP server
        include /etc/nginx/conf.d/wordpress-locations.conf;
    }

    # Additional server blocks for redirects
    server {
        listen 80;
        listen [::]:80;
        server_name www.saraivavision.com.br;
        return 301 https://saraivavision.com.br$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.saraivavision.com.br;

        ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;

        return 301 https://saraivavision.com.br$request_uri;
    }
}