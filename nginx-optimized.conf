# Nginx Configuration for Saraiva Vision - Production Optimized
# /etc/nginx/sites-available/saraivavision

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=main_limit:10m rate=60r/s;

# Cache configuration for static assets
proxy_cache_path /var/cache/nginx/saraiva levels=1:2 keys_zone=saraiva_cache:10m inactive=60m use_temp_path=off;

# CORS configuration map
map $request_method $cors_method {
    default "GET, POST, OPTIONS";
    GET     "GET, OPTIONS";
    POST    "POST, OPTIONS";
    PUT     "PUT, POST, OPTIONS";
    DELETE  "DELETE, OPTIONS";
}

map $http_origin $cors_origin {
    default "";
    "~^https://saraivavision\.com\.br$" "https://saraivavision.com.br";
    "~^https://www\.saraivavision\.com\.br$" "https://www.saraivavision.com.br";
    "~^https://localhost:\d+$" "$http_origin";  # Development
}

# Upstream for API Node.js
upstream api_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'; img-src 'self' https: data: blob:; font-src 'self' https: data:; connect-src 'self' https: wss:; media-src 'self' https: blob:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Document root
    root /var/www/html;
    index index.html index.htm;

    # Logging
    access_log /var/log/nginx/saraivavision_access.log;
    error_log /var/log/nginx/saraivavision_error.log;

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API routes with rate limiting
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;

        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # CORS headers for API
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods $cors_method always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WordPress GraphQL proxy with CORS
    location /api/wordpress-graphql/ {
        limit_req zone=api_limit burst=5 nodelay;

        proxy_pass http://localhost:8083/graphql;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Enhanced CORS for GraphQL
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "86400" always;

        # Special handling for GraphQL preflight
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age "86400" always;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;

        # Enable Gzip compression
        gzip_static on;

        # Try files with fallback
        try_files $uri =404;
    }

    # Assets directory with versioning support
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;

        # Enable Gzip compression
        gzip_static on;

        try_files $uri =404;
    }

    # Service Worker
    location = /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri =404;
    }

    # Manifest and other PWA files
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "application/manifest+json";
        try_files $uri =404;
    }

    # WordPress REST API proxy
    location /wp-json/ {
        proxy_pass http://localhost:8083/wp-json/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS for WordPress REST API
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods $cors_method always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce" always;
        add_header Access-Control-Allow-Credentials "true" always;
    }

    # WordPress admin redirect
    location /wp-admin/ {
        return 301 https://blog.saraivavision.com.br/wp-admin/;
    }

    # Robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Sitemap
    location = /sitemap.xml {
        expires 1h;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Block access to sensitive files
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf|env|git|svn)$ {
        deny all;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Handle favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Cache control for SPA entrypoint
    location = /index.html {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri =404;
    }

    # React Router - SPA fallback
    # This should be the last location block
    location / {
        limit_req zone=main_limit burst=20 nodelay;

        # Try to serve request as file, then as directory, then fall back to index.html
        try_files $uri $uri/ /index.html;
    }
}

# Performance optimizations
client_max_body_size 10M;
client_body_buffer_size 128k;
client_body_timeout 60;
client_header_timeout 60;
keepalive_timeout 65;
send_timeout 60;

# Gzip compression
gzip on;
gzip_vary on;
gzip_min_length 1000;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml
    text/html;