# Saraiva Vision Fluent-bit Configuration
# HIPAA-compliant logging for medical applications

[SERVICE]
    Flush         1
    Log_Level     info
    Daemon        off
    Parsers_File  parsers.conf
    HTTP_Server   On
    HTTP_Listen   0.0.0.0
    HTTP_Port     2020
    Health_Check  On

# Input: Docker container logs with medical metadata
[INPUT]
    Name              tail
    Path              /var/log/containers/*saraiva*.log
    Parser            docker
    Tag               container.*
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: Nginx access logs for medical audit trail
[INPUT]
    Name              tail
    Path              /var/log/nginx/*access.log
    Parser            nginx
    Tag               nginx.access
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: Nginx error logs for medical system monitoring
[INPUT]
    Name              tail
    Path              /var/log/nginx/*error.log
    Parser            nginx_error
    Tag               nginx.error
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: MySQL slow query logs for medical performance monitoring
[INPUT]
    Name              tail
    Path              /var/log/mysql/slow.log
    Parser            mysql_slow
    Tag               mysql.slow
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: MySQL error logs for medical system monitoring
[INPUT]
    Name              tail
    Path              /var/log/mysql/error.log
    Parser            mysql_error
    Tag               mysql.error
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: System logs for medical compliance
[INPUT]
    Name              tail
    Path              /var/log/syslog
    Parser            syslog
    Tag               system
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Input: Health monitor logs for medical system status
[INPUT]
    Name              tail
    Path              /var/log/saraiva/health-monitor/*.log
    Parser            json
    Tag               health.monitor
    Mem_Buf_Limit     5MB
    Refresh_Interval  5

# Filter: Add medical compliance metadata
[FILTER]
    Name                modify
    Match               *
    Add                 medical_system true
    Add                 compliance_level HIPAA
    Add                 data_classification PHI
    Add                 application saraiva-vision
    Add                 environment production
    Add                 timestamp ${time}

# Filter: Enrich logs with medical metadata
[FILTER]
    Name                record_modifier
    Match               *
    Record              hostname ${HOSTNAME}
    Record              source_ip ${HOST_IP}
    Record              medical_facility Saraiva-Vision
    Record              department Ophthalmology

# Filter: Sanitize medical data for HIPAA compliance
[FILTER]
    Name                grep
    Match               *
    Regex               (password|secret|token|key|auth)
    Exclude             true

# Filter: Parse JSON logs from applications
[FILTER]
    Name                parser
    Match               *
    Key_Name            log
    Parser              json
    Reserve_Data        On
    Preserve_Key        On

# Filter: Extract medical system metrics
[FILTER]
    Name                lua
    Match               *
    Script              /fluent-bit/scripts/medical_metrics.lua
    Call                extract_medical_metrics

# Output: Elasticsearch for medical log storage
[OUTPUT]
    Name                es
    Match               *
    Host                elasticsearch
    Port                9200
    Index               saraiva-vision-medical-logs
    Type                _doc
    HTTP_User           elastic
    HTTP_Passwd         ${ELASTICSEARCH_PASSWORD}
    Logstash_Format     On
    Logstash_Prefix     logstash-
    Logstash_DateFormat %Y.%m.%d
    Include_Tag_Key     On
    Tag_Key             @tag
    Time_Key            @timestamp
    Generate_ID         On

# Output: File backup for medical audit trail
[OUTPUT]
    Name                file
    Match               *
    Path                /var/log/saraiva/backup/
    File                medical-logs.log
    Format              json_lines
    Rotate_Size         100M
    Rotate_Interval     24h
    Max_Rotate          30

# Output: Syslog for medical compliance
[OUTPUT]
    Name                syslog
    Match               nginx.*
    Host                syslog-server
    Port                514
    Mode                tcp
    Format              rfc5424
    Framer              none

# Output: CloudWatch for medical system monitoring
[OUTPUT]
    Name                cloudwatch
    Match               *
    region              us-east-1
    log_group_name      saraiva-vision-medical
    log_stream_name     medical-logs
    auto_create_group   true
    auto_create_stream  true

# Output: Prometheus metrics for medical monitoring
[OUTPUT]
    Name                prometheus_remote_write
    Match               health.monitor
    Host                prometheus
    Port                9090
    URI                 /api/v1/write
    Metrics             medical_system_*
    Labels              {env="production", app="saraiva-vision"}

# Output: Alert webhook for medical critical events
[OUTPUT]
    Name                http
    Match               *
    Host                webhook-service
    Port                8080
    URI                 /medical-alerts
    Format              json
    Header              Authorization Bearer ${ALERT_WEBHOOK_TOKEN}

# Output: Slack notification for medical system alerts
[OUTPUT]
    Name                slack
    Match               nginx.error
    Webhook             https://hooks.slack.com/services/${SLACK_WEBHOOK}
    Channel             #medical-alerts
    Icon                :medical_symbol:
    Username            saraiva-vision-monitor
    Message_template    Medical Alert: ${log}

# Output: Email notification for critical medical events
[OUTPUT]
    Name                smtp
    Match               mysql.error
    Host                smtp.gmail.com
    Port                587
    User                ${SMTP_USER}
    Password            ${SMTP_PASSWORD}
    From                saraiva-monitor@saraivavision.com.br
    To                  admin@saraivavision.com.br
    Subject             Medical System Alert: ${log}
    TLS                 On
    Message_template    Critical medical database error detected

# Output: S3 for medical log archiving
[OUTPUT]
    Name                s3
    Match               *
    Bucket              saraiva-vision-medical-logs-archive
    region              us-east-1
    store_dir           /tmp/s3
    total_file_size     1G
    upload_timeout      10m
    use_put_object      On
    compression         gzip
    stat_interval       1s

# Output: Kafka for medical real-time processing
[OUTPUT]
    Name                kafka
    Match               *
    Brokers             kafka:9092
    Topics              medical-logs
    Format              json
    Timestamp_Key       timestamp
    Timestamp_Format    iso8601

# Output: Datadog for medical observability
[OUTPUT]
    Name                datadog
    Match               *
    Host                http-intake.logs.datadoghq.com
    TLS                 On
    compress            gzip
    api_key             ${DATADOG_API_KEY}
    service             saraiva-vision
    source              medical-system
    hostname            ${HOSTNAME}
    ddsource            fluent-bit
    ddtags              env:production,medical:hipaa

# Emergency Output: Local file fallback
[OUTPUT]
    Name                file
    Match               *
    Path                /var/log/saraiva/emergency/
    File                emergency-backup.log
    Format              json_lines
    Rotate_Size         50M
    Max_Rotate          10