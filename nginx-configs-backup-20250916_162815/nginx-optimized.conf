# Nginx Site Configuration - SaraivaVision Optimized
# Medical clinic website with WordPress integration
# Updated: September 2025
# Note: Rate limiting zones should be included in http context via nginx-http.conf

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # Security: Block all other HTTP requests
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;
    
    # Security
    server_tokens off;
    
    # Root directory
    root /var/www/saraivavision/current;
    index index.html;

    # SSL configuration (otimizada para A+ rating)
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    include /etc/nginx/includes/security-headers.conf;
    include /etc/nginx/includes/csp.conf;

    # CORS configuration
    set $cors_origin "";
    if ($http_origin ~* "^https?://(www\.)?saraivavision\.com\.br$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~* "^https?://saraivavision\.vercel\.app$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~* "^http://localhost(:[0-9]{2,5})?$") {
        set $cors_origin $http_origin;
    }

    # MIME types
    include /etc/nginx/mime.types;
    
    # Gzip compression otimizada
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/manifest+json
        application/wasm
        font/woff
        font/woff2
        font/ttf
        font/eot
        font/otf;

    # Performance optimizations
    tcp_nodelay on;
    tcp_nopush on;
    sendfile on;
    sendfile_max_chunk 1m;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        return 200 "OK\n";
    }

    # Security blocks
    location ~ /\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }

    # HTML files - no cache for SPA
    location = /index.html {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
        try_files $uri $uri/ /index.html;
    }

    # PWA Manifest
    location ~* \.webmanifest$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        add_header Content-Type application/manifest+json;
        add_header Vary Accept-Encoding;
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # Service Worker
    location = /sw.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Content-Type application/javascript;
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # JSON files
    location ~* \.json$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate, max-age=3600";
        add_header Vary Accept-Encoding;
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # Static assets - optimized caching
    location ~* \.(css|js|mjs)$ {
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary Accept-Encoding;
        include /etc/nginx/includes/security-headers.conf;
        
        # Performance optimizations
        tcp_nodelay on;
        tcp_nopush on;
        etag on;
        
        try_files $uri =404;
    }

    # Images and fonts
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif|woff2?|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary Accept-Encoding;
        include /etc/nginx/includes/security-headers.conf;
        
        # Image optimization headers
        add_header Accept-CH "DPR, Viewport-Width, Width";
        
        try_files $uri =404;
    }

    # Media files - streaming support
    location ~* \.(mp3|m4a|aac|ogg|wav|mp4|webm)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Accept-Ranges bytes;
        add_header Vary Accept-Encoding;
        
        # Range request support for streaming
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # SEO files
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        access_log off;
        try_files $uri =404;
    }

    location = /sitemap.xml {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        add_header Content-Type application/xml;
        access_log off;
        try_files $uri =404;
    }

    # API endpoints - mock responses for development
    location = /ads {
        limit_req zone=api burst=10 nodelay;
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        include /etc/nginx/includes/security-headers.conf;
        access_log off;
        return 200 '{"status":"ok","message":"ads blocked or disabled"}';
    }

    location = /web-vitals {
        limit_req zone=api burst=20 nodelay;
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS, POST";
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Content-Type application/json;
        include /etc/nginx/includes/security-headers.conf;
        access_log off;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        if ($request_method = 'POST') {
            return 204;
        }
        return 200 '{"cls":0,"fid":0,"lcp":0}';
    }

    # WordPress integration - optimized proxy settings
    location ^~ /wp-includes/ {
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optimized proxy buffering
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 8k;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Caching
        add_header Cache-Control "public, max-age=3600";
        add_header Vary Accept-Encoding;
        
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    location ^~ /wp-content/ {
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optimized proxy buffering
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 8k;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Longer cache for static content
        add_header Cache-Control "public, max-age=7200";
        add_header Vary Accept-Encoding;
        
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # WordPress Admin - restricted access with rate limiting
    location ^~ /wp-admin/ {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        
        # Admin-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Redirects
        proxy_redirect ~^http://(localhost|127\.0\.0\.1):8083(/.*)$ https://$host$2;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    location = /wp-login.php {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        
        proxy_redirect ~^http://(localhost|127\.0\.0\.1):8083(/.*)$ https://$host$2;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # WordPress REST API - optimized for performance
    location /wp-json/ {
        limit_req zone=api burst=15 nodelay;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # JSON-optimized buffering
        proxy_buffer_size 4k;
        proxy_buffers 4 4k;
        proxy_busy_buffers_size 8k;
        
        # API timeouts
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # API caching
        add_header Cache-Control "public, max-age=300";
        add_header Vary Accept-Encoding;
        
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # Blog routing
    location /blog/ {
        proxy_pass http://127.0.0.1:8083/;
        proxy_set_header Host "cms.saraivavision.com.br";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        
        proxy_redirect default;
        proxy_redirect / /blog/;
    }

    # CMS subdirectory
    location /cms/ {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:8083/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API proxy - with enhanced CORS and rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Vary' 'Origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Vary' 'Origin';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # SPA fallback - optimized
    location / {
        limit_req zone=general burst=30 nodelay;
        
        try_files $uri $uri/ /index.html;
        
        # Performance headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        
        # Resource hints for critical assets
        add_header Link "</assets/index.css>; rel=preload; as=style, </assets/index.js>; rel=preload; as=script" always;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}