# Development stage for frontend
FROM node:20-alpine AS development

# Set working directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs

# Install development dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libc6-compat \
    vips-dev \
    vips-tools \
    pkgconfig \
    glib-dev \
    curl \
    wget \
    tini

# Copy package files first for better layer caching
COPY package.json ./
COPY package-lock.json ./

# Install dependencies
RUN npm install --legacy-peer-deps

# Copy source code (respecting .dockerignore)
COPY . .

# Fix permissions for the non-root user
RUN chown -R nodejs:nodejs /app

# Set development environment variables
ENV NODE_ENV=development
ENV VITE_BUILD_TARGET=development

# Switch to non-root user
USER nodejs

# Expose the port the app runs on
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3002/health || exit 1

# Use tini for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start development server
CMD ["/usr/local/bin/node", "server-dev.js"]