{
  "name": "saraiva-vision-site",
  "type": "module",
  "version": "2.0.1",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "build:vercel": "vite build",
    "preview": "vite preview",
    "start": "vite",
    "dev:vercel": "npx vercel dev --listen 3000",
    "vercel:deploy": "npx vercel --prod",
    "vercel:pull": "npx vercel pull --yes --environment=production",
    "deploy:intelligent": "node scripts/vercel-intelligent-deploy.js",
    "deploy:config": "node scripts/vercel-config-manager.js",
    "deploy:simple": "./scripts/deploy.sh",
    "deploy:production": "node scripts/vercel-config-manager.js apply production && npm run vercel:deploy",
    "deploy:edge": "node scripts/vercel-config-manager.js apply edge && npm run vercel:deploy",
    "deploy:node22": "node scripts/vercel-config-manager.js apply node22 && npm run vercel:deploy",
    "deploy:static": "node scripts/vercel-config-manager.js apply static && npm run vercel:deploy",
    "build:static": "vite build --mode static",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:unit": "vitest run --workspace unit",
    "test:integration": "vitest run --workspace integration",
    "test:e2e": "vitest run --workspace e2e",
    "test:performance": "vitest run --workspace performance",
    "test:api": "vitest run api/__tests__",
    "test:frontend": "vitest run src/__tests__",
    "test:watch": "vitest --watch",
    "test:chatbot": "vitest run --config vitest.chatbot.config.js",
    "test:chatbot:watch": "vitest --config vitest.chatbot.config.js --watch",
    "test:chatbot:coverage": "vitest run --config vitest.chatbot.config.js --coverage",
    "test:chatbot:ui": "vitest --config vitest.chatbot.config.js --ui",
    "test:chatbot:comprehensive": "node scripts/run-chatbot-comprehensive-tests.js",
    "test:integration-compliance": "node scripts/run-integration-compliance-tests.js",
    "test:medical-compliance": "vitest run src/services/__tests__/*compliance*.test.js",
    "test:config": "node scripts/test-configuration.js",
    "test:config:validate": "node -e \"import('./src/config/configValidator.js').then(m => console.log(JSON.stringify(m.default.validateAll(), null, 2)))\"",
    "config:validate": "node scripts/test-configuration.js",
    "config:report": "node -e \"import('./src/config/configValidator.js').then(m => console.log(JSON.stringify(m.default.generateReport(), null, 2)))\"",
    "deploy:chatbot": "node scripts/deploy-chatbot.js",
    "deploy:chatbot:staging": "node scripts/deploy-chatbot.js --environment staging",
    "deploy:chatbot:production": "node scripts/deploy-chatbot.js --environment production",
    "deploy:chatbot:quick": "node scripts/deploy-chatbot.js --skip-tests --skip-health-check",
    "disaster:backup": "node scripts/disaster-recovery.js backup",
    "disaster:recover": "node scripts/disaster-recovery.js recover",
    "disaster:rollback": "node scripts/disaster-recovery.js rollback",
    "disaster:status": "node scripts/disaster-recovery.js status",
    "monitor:start": "node -e \"import('./src/monitoring/productionMonitor.js').then(m => m.default.start())\"",
    "monitor:stop": "node -e \"import('./src/monitoring/productionMonitor.js').then(m => m.default.stop())\"",
    "test:lgpd-privacy": "vitest run src/services/__tests__/*privacy*.test.js",
    "test:api-integration": "vitest run api/__tests__/chatbot*.test.js",
    "lint:syntax-api": "find api -name '*.js' -exec node -c {} \\; || (echo 'API syntax errors found' && exit 1)",
    "lint:encoding-api": "find api -name '*.js' -exec file {} \\; | grep -v 'UTF-8\\|ASCII' && (echo 'Non-UTF8 API files found' && exit 1) || echo 'All API files are UTF-8 compliant'",
    "validate:api": "npm run lint:syntax-api && npm run lint:encoding-api",
    "dev:contact": "npx vercel dev --listen 3000",
    "test:contact": "vitest run --reporter=verbose api/contact",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "deploy:setup": "node scripts/vercel-env-setup.js",
    "deploy:setup:full": "node scripts/vercel-deployment-setup.js",
    "deploy:optimize": "node scripts/optimize-serverless-functions.js",
    "deploy:test": "node scripts/test-deployment.js",
    "deploy:test:preview": "node scripts/test-deployment.js preview",
    "deploy:test:dev": "node scripts/test-deployment.js development",
    "deploy:full": "npm run deploy:setup:full && npm run deploy:optimize && npm run vercel:deploy && npm run deploy:test",
    "deploy:verify": "node scripts/verify-deployment-config.js",
    "production:check": "node scripts/production-readiness-check.js",
    "production:security": "node scripts/security-audit.js",
    "chatbot:setup": "node scripts/setup-chatbot-performance.js",
    "chatbot:test": "node test-chatbot-performance.js",
    "chatbot:performance": "node test-chatbot-performance.js",
    "chatbot:cache:warm": "node scripts/setup-chatbot-performance.js",
    "production:performance": "node scripts/performance-optimizer.js",
    "production:ssl": "node scripts/ssl-certificate-manager.js",
    "production:backup": "node scripts/backup-recovery-test.js",
    "production:deploy": "node scripts/deploy-production.js",
    "production:deploy:fast": "node scripts/deploy-production.js --skip-backup --skip-performance",
    "domain:verify": "node scripts/verify-domain-setup.js",
    "domain:check": "node scripts/verify-domain-setup.js",
    "domain:fix": "node scripts/fix-redirect-loop.js",
    "domain:diagnose": "node scripts/diagnose-redirects.js",
    "test:routes": "node scripts/test-routes.js",
    "xai:setup": "node scripts/setup-vercel-xai.js",
    "xai:setup:bash": "./scripts/configure-vercel-xai.sh",
    "xai:test": "node test-xai-chatbot.js",
    "xai:test:fallback": "node test-chatbot-fallback.js",
    "xai:verify": "vercel env ls | grep XAI",
    "check:env": "node scripts/check-env.js",
    "check:env:example": "node scripts/check-env.js --generate-example"
  },
  "dependencies": {
    "@ai-sdk/xai": "^1.2.18",
    "@emotion/is-prop-valid": "^1.2.1",
    "@flags-sdk/hypertune": "^0.3.0",
    "@google/generative-ai": "^0.24.1",
    "@googlemaps/js-api-loader": "^1.16.10",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-avatar": "^1.0.3",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.5",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@sentry/react": "^10.12.0",
    "@sentry/tracing": "^7.120.4",
    "@supabase/supabase-js": "^2.30.0",
    "@vercel/analytics": "^1.5.0",
    "@vercel/edge-config": "^1.4.0",
    "ai": "^4.3.19",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.6.0",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.1",
    "esbuild": "^0.25.10",
    "fast-xml-parser": "^5.2.5",
    "flags": "^4.0.1",
    "framer-motion": "^10.16.4",
    "graphql": "^16.11.0",
    "graphql-request": "^7.2.0",
    "hypertune": "^2.10.0",
    "i18next": "^23.11.5",
    "i18next-browser-languagedetector": "^8.0.0",
    "lucide-react": "^0.285.0",
    "motion": "^12.23.16",
    "music-metadata": "^10.9.1",
    "posthog-js": "^1.268.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-google-recaptcha": "^3.1.0",
    "react-helmet-async": "^2.0.5",
    "react-i18next": "^14.1.2",
    "react-icons": "^5.5.0",
    "react-router-dom": "^6.16.0",
    "resend": "^6.0.2",
    "server-only": "^0.0.1",
    "sharp": "^0.33.5",
    "tailwind-merge": "^1.14.0",
    "tailwindcss-animate": "^1.0.7",
    "web-vitals": "^5.1.0",
    "workbox-build": "^7.3.0",
    "ws": "^8.18.3",
    "zod": "^3.22.4"
  },
  "engines": {
    "node": "22.x"
  },
  "devDependencies": {
    "@eslint/js": "^9.36.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.5.1",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "@typescript-eslint/parser": "^8.44.0",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.16",
    "eslint": "^9.36.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "globals": "^16.4.0",
    "jsdom": "^23.0.1",
    "node-mocks-http": "^1.17.2",
    "postcss": "^8.4.31",
    "supertest": "^7.1.4",
    "tailwindcss": "^3.3.3",
    "typescript": "^5.9.2",
    "vite": "^7.1.3",
    "vitest": "^1.0.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Sudo-psc/saraivavision-site-v2.git"
  },
  "homepage": "https://saraivavision.com.br",
  "bugs": {
    "url": "https://github.com/Sudo-psc/saraivavision-site-v2/issues"
  }
}