# Nginx SSL Configuration for Saraiva Vision CMS
# Optimized SSL/TLS configuration for WordPress GraphQL endpoint
# Server: cms.saraivavision.com.br

server {
    listen 80;
    listen [::]:80;
    server_name cms.saraivavision.com.br;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cms.saraivavision.com.br;

    # SSL Certificate Configuration
    ssl_certificate /etc/letsencrypt/live/cms.saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.saraivavision.com.br/privkey.pem;

    # SSL Security Headers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # SSL Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Security optimizations
    ssl_ecdh_curve secp384r1;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Path to Let's Encrypt SSL certificates
    ssl_trusted_certificate /etc/letsencrypt/live/cms.saraivavision.com.br/chain.pem;

    # Certificate verification
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # WordPress Root Directory
    root /var/www/cms.saraivavision.com.br;
    index index.php index.html index.htm;

    # Security - Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to WordPress configuration files
    location ~* wp-config\.php|wp-login\.php$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to wp-content and wp-includes directories
    location ~* ^/wp-(content|includes)/.*\.php$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # GraphQL endpoint with CORS configuration
    location /graphql {
        try_files $uri $uri/ /index.php?$query_string;

        # CORS headers for frontend access
        add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Max-Age "86400" always;

        # GraphQL-specific security
        if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin "https://saraivavision.com.br";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age "86400";
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        # Rate limiting for GraphQL endpoint
        limit_req zone=graphql burst=20 nodelay;

        # Pass to PHP-FPM
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Additional security headers for GraphQL
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://saraivavision.com.br" always;
    }

    # WordPress REST API with CORS
    location /wp-json/ {
        try_files $uri $uri/ /index.php?$query_string;

        # CORS headers for frontend access
        add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce" always;
        add_header Access-Control-Max-Age "86400" always;

        if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin "https://saraivavision.com.br";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce";
            add_header Access-Control-Max-Age "86400";
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        # Pass to PHP-FPM
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # WordPress front-end
    location / {
        try_files $uri $uri/ /index.php?$query_string;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # Pass to PHP-FPM for PHP files
        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Security for PHP files
            fastcgi_param HTTPS on;
            fastcgi_param HTTP_SCHEME https;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type "application/json";
        return 200 '{"status": "healthy", "service": "cms", "timestamp": "'$time_iso8601'"}';
    }

    # SSL health check endpoint
    location /ssl-health {
        access_log off;
        add_header Content-Type "application/json";
        return 200 '{"ssl": "enabled", "protocols": "TLSv1.2,TLSv1.3", "cert_status": "valid", "timestamp": "'$time_iso8601'"}';
    }

    # Logging
    access_log /var/log/nginx/cms.saraivavision.com.br.access.log;
    error_log /var/log/nginx/cms.saraivavision.com.br.error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}

# Rate limiting zone for GraphQL endpoint
limit_req_zone $binary_remote_addr zone=graphql:10m rate=30r/m;