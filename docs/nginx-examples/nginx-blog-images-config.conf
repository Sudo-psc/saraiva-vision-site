# Nginx Configuration for Blog Images with AVIF/WebP Support
# Location: /etc/nginx/sites-available/saraivavision.com.br
# Include this in your main server block

# ============================================
# MIME TYPES FOR MODERN IMAGE FORMATS
# ============================================
# Add to /etc/nginx/mime.types if not present:
#   image/avif    avif;
#   image/webp    webp;

# ============================================
# BLOG IMAGES LOCATION BLOCK
# ============================================
location /Blog/ {
    alias /var/www/html/Blog/;

    # Try files with case-insensitive matching (Linux filesystems are case-sensitive)
    try_files $uri $uri/ =404;

    # CORS headers for CDN/cross-origin requests
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept' always;

    # Content negotiation for modern formats
    add_header 'Vary' 'Accept' always;

    # Cache control for images (1 year)
    add_header 'Cache-Control' 'public, max-age=31536000, immutable' always;

    # ETag for cache validation
    etag on;

    # Gzip compression for SVG
    gzip on;
    gzip_types image/svg+xml;

    # Security headers
    add_header 'X-Content-Type-Options' 'nosniff' always;

    # Serve AVIF if browser supports it
    location ~ \.(png|jpg|jpeg)$ {
        # Try AVIF first, then WebP, then original
        set $webp_suffix "";
        set $avif_suffix "";

        if ($http_accept ~* "image/avif") {
            set $avif_suffix ".avif";
        }
        if ($http_accept ~* "image/webp") {
            set $webp_suffix ".webp";
        }

        # Extract base filename without extension
        set $basename $uri;
        if ($uri ~ ^(.*)\.([^.]+)$) {
            set $basename $1;
        }

        # Try AVIF, WebP, then original
        try_files ${basename}${avif_suffix} ${basename}${webp_suffix} $uri =404;

        # Content-Type headers
        types {
            image/avif avif;
            image/webp webp;
            image/jpeg jpg jpeg;
            image/png png;
        }
    }
}

# ============================================
# FALLBACK FOR 404 IMAGES
# ============================================
location = /img/blog-fallback.jpg {
    alias /var/www/html/img/blog-fallback.jpg;

    # If fallback doesn't exist, return empty 1x1 transparent PNG
    try_files $uri /img/empty.png =404;

    # Cache fallback for 1 day only
    add_header 'Cache-Control' 'public, max-age=86400' always;
}

# ============================================
# ERROR PAGE FOR MISSING IMAGES
# ============================================
error_page 404 = @image_not_found;

location @image_not_found {
    # Only apply to image requests
    if ($request_uri ~ \.(png|jpg|jpeg|webp|avif)$) {
        return 302 /img/blog-fallback.jpg;
    }
    return 404;
}

# ============================================
# RATE LIMITING (Optional - prevent abuse)
# ============================================
# Add to http block:
# limit_req_zone $binary_remote_addr zone=images:10m rate=50r/s;
#
# Then in location block:
# limit_req zone=images burst=100 nodelay;

# ============================================
# CLOUDFLARE CACHE RULES
# ============================================
# If using Cloudflare CDN, add these page rules:
#
# 1. Cache Everything for /Blog/*
#    - Cache Level: Cache Everything
#    - Edge Cache TTL: 1 month
#    - Browser Cache TTL: 1 year
#
# 2. Auto Minify: Disable for images
#
# 3. Polish: Lossless or Lossy (converts to WebP automatically)
#
# 4. Mirage: Enable (progressive image loading)

# ============================================
# VERIFICATION COMMANDS
# ============================================
# Test AVIF support:
#   curl -H "Accept: image/avif" -I https://saraivavision.com.br/Blog/capa_daltonismo.png
#
# Test WebP support:
#   curl -H "Accept: image/webp" -I https://saraivavision.com.br/Blog/capa_daltonismo.png
#
# Test original PNG:
#   curl -I https://saraivavision.com.br/Blog/capa_daltonismo.png
#
# Check mime-type:
#   curl -I https://saraivavision.com.br/Blog/capa_daltonismo-480w.avif | grep Content-Type
#
# Verify cache headers:
#   curl -I https://saraivavision.com.br/Blog/capa_daltonismo.png | grep -E '(Cache-Control|ETag|Vary)'

# ============================================
# RELOAD NGINX
# ============================================
# sudo nginx -t                    # Test configuration
# sudo systemctl reload nginx      # Apply changes
