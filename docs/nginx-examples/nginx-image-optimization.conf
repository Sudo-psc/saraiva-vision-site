# Saraiva Vision - Image Optimization Configuration
# Handles AVIF/WebP → PNG/JPEG fallback with proper MIME types

# Add modern image MIME types
types {
    image/avif    avif;
    image/webp    webp;
}

server {
    listen 80;
    server_name saraivavision.com.br www.saraivavision.com.br;
    root /var/www/html;
    index index.html;

    # Progressive image fallback with try_files
    location /Blog/ {
        # Try AVIF → WebP → PNG/JPEG → 404
        location ~ ^/Blog/(?<basename>.+)-(?<width>\d+)w\.avif$ {
            try_files
                /Blog/${basename}-${width}w.avif     # AVIF first
                /Blog/${basename}-${width}w.webp     # Fallback to WebP
                /Blog/${basename}.png                # Original PNG
                /Blog/${basename}.jpg                # Original JPEG
                =404;                               # Final fallback

            add_header Vary Accept;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location ~ ^/Blog/(?<basename>.+)-(?<width>\d+)w\.webp$ {
            try_files
                /Blog/${basename}-${width}w.webp     # WebP first
                /Blog/${basename}.png                # Original PNG
                /Blog/${basename}.jpg                # Original JPEG
                =404;

            add_header Vary Accept;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Direct image access with format negotiation
        location ~ ^/Blog/(?<filename>.+)\.(avif|webp)$ {
            try_files
                $uri                                 # Try exact match
                /Blog/${filename}.png               # PNG fallback
                /Blog/${filename}.jpg               # JPEG fallback
                =404;

            add_header Vary Accept;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Static files with caching
        location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept;

            # CORS for potential cross-origin usage
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET";
            add_header Access-Control-Allow-Headers "Accept, Content-Type";
        }
    }

    # Cache static assets aggressively
    location ~* \.(avif|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/saraivavision.access.log;
    error_log /var/log/nginx/saraivavision.error.log warn;
}