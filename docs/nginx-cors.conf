# Nginx CORS Configuration for GraphQL and WordPress REST API
# Enhanced security headers for cross-origin requests

# CORS configuration map - should be placed in http context
map $request_method $cors_method {
    default "GET, POST, OPTIONS";
    GET     "GET, OPTIONS";
    POST    "POST, OPTIONS";
    PUT     "PUT, POST, OPTIONS";
    DELETE  "DELETE, OPTIONS";
}

map $http_origin $cors_origin {
    default "";
    "~^https://saraivavision\.com\.br$" "https://saraivavision.com.br";
    "~^https://www\.saraivavision\.com\.br$" "https://www.saraivavision.com.br";
    "~^https://localhost:\d+$" "$http_origin";  # Development
}

# Rate limiting zones - should be placed in http context
limit_req_zone $binary_remote_addr zone=graphql:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=rest_api:10m rate=60r/m;

# GraphQL endpoint specific configuration
location /graphql {
    # Rate limiting
    limit_req zone=graphql burst=20 nodelay;

    # Request size limit for GraphQL
    client_max_body_size 1M;

    # Timeouts for GraphQL requests
    fastcgi_connect_timeout 30s;
    fastcgi_send_timeout 30s;
    fastcgi_read_timeout 30s;

    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods $cors_method always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "86400" always;

    if ($request_method = "OPTIONS") {
        add_header Access-Control-Allow-Origin $cors_origin;
        add_header Access-Control-Allow-Methods $cors_method;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept";
        add_header Access-Control-Max-Age "86400";
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }

    # GraphQL-specific headers
    add_header X-GraphQL-Status "active" always;
    add_header X-RateLimit-Limit "30" always;
    add_header X-RateLimit-Status $limit_req_status always;

    # Security headers for GraphQL
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy specifically for GraphQL
    add_header Content-Security-Policy "default-src 'none'; script-src 'self'; connect-src 'self' https://saraivavision.com.br; style-src 'self'; img-src 'self' data:; font-src 'self'; form-action 'self'; frame-ancestors 'none';" always;

    # Cache control for GraphQL responses
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;

    # Pass to PHP-FPM for WordPress GraphQL
    try_files $uri $uri/ /index.php?$query_string;
    fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;

    # FastCGI parameters for GraphQL
    fastcgi_param HTTPS on;
    fastcgi_param HTTP_SCHEME https;
    fastcgi_param HTTP_X_REQUESTED_WITH "XMLHttpRequest";
    fastcgi_param CONTENT_TYPE "application/json";
    fastcgi_param ACCEPT "application/json";
}

# WordPress REST API configuration
location ~* ^/wp-json/ {
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods $cors_method always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "86400" always;
    add_header X-WP-API "true" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    if ($request_method = "OPTIONS") {
        add_header Access-Control-Allow-Origin $cors_origin;
        add_header Access-Control-Allow-Methods $cors_method;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept";
        add_header Access-Control-Max-Age "86400";
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }

    limit_req zone=rest_api burst=10 nodelay;
    client_max_body_size 2M;
    fastcgi_connect_timeout 30s;
    fastcgi_send_timeout 30s;
    fastcgi_read_timeout 30s;
    add_header X-WP-Version "$wordpress_version" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    try_files $uri $uri/ /index.php?$query_string;
    fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
    fastcgi_param HTTPS on;
    fastcgi_param HTTP_SCHEME https;
    fastcgi_param HTTP_X_REQUESTED_WITH "XMLHttpRequest";
}


