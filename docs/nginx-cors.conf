# Nginx CORS Configuration Maps for GraphQL and WordPress REST API
# These maps should be placed in http context for CORS handling

# CORS configuration map - should be placed in http context
map $request_method $cors_method {
    default "GET, POST, OPTIONS";
    GET     "GET, OPTIONS";
    POST    "POST, OPTIONS";
    PUT     "PUT, POST, OPTIONS";
    DELETE  "DELETE, OPTIONS";
}

map $http_origin $cors_origin {
    default "";
    "~^https://saraivavision\.com\.br$" "https://saraivavision.com.br";
    "~^https://www\.saraivavision\.com\.br$" "https://www.saraivavision.com.br";
    "~^https://localhost:\d+$" "$http_origin";  # Development
}

# Rate limiting zones - should be placed in http context
# Note: These limit_req_zone directives must be placed in the http context of nginx.conf
# limit_req_zone $binary_remote_addr zone=graphql:10m rate=30r/m;
# limit_req_zone $binary_remote_addr zone=rest_api:10m rate=60r/m;

# CORS headers configuration for various contexts
# These variables can be used in server/location blocks

# Common CORS headers for API endpoints
add_header Access-Control-Allow-Origin $cors_origin always;
add_header Access-Control-Allow-Methods $cors_method always;
add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-WP-Nonce, Accept" always;
add_header Access-Control-Allow-Credentials "true" always;
add_header Access-Control-Max-Age "86400" always;

# Security headers for API endpoints
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Cache control for API responses
add_header Cache-Control "no-cache, no-store, must-revalidate" always;
add_header Pragma "no-cache" always;
add_header Expires "0" always;


