## ------------------------------------------------------------
## Rate limiting zone (placed before servers; file included in http context)
## ------------------------------------------------------------
limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge (prior to redirect) for webroot validations
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;
    server_tokens off;

    # Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ---- TLS / SSL (modern intermediate) ----
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # ---- Security Headers ----
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always; # (consider frame-ancestors via CSP in futuro)
    # X-XSS-Protection removido (obsoleto nos navegadores modernos)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), interest-cohort=()" always;
    # CSP restrita (ajuste se quebrar algo: scripts/estilos inline ainda permitidos para build atual)
    add_header Content-Security-Policy "\
      default-src 'self'; \
      script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://www.googleadservices.com https://www.gstatic.com https://maps.googleapis.com; \
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; \
      img-src 'self' data: https:; \
      font-src 'self' data: https://fonts.gstatic.com; \
      connect-src 'self' https://www.google-analytics.com https://region1.google-analytics.com https://www.googletagmanager.com https://www.googleadservices.com https://api.whatsapp.com https://maps.googleapis.com; \
      media-src 'self' https:; \
      frame-src 'self' https://www.googletagmanager.com; \
      object-src 'none'; \
      frame-ancestors 'self'; \
      base-uri 'self'; \
      form-action 'self'\
    " always;
    add_header Cache-Control "no-transform" always;

    # ---- Compression (gzip) ----
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml;

    # ---- Root / SPA ----
    root /usr/share/nginx/html;
    index index.html;

    # JavaScript modules MIME type fix - ES6 modules
    location ~* \.m?js$ {
        add_header Content-Type "text/javascript; charset=utf-8" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # JSON files
    location ~* \.json$ {
        add_header Content-Type "application/json; charset=utf-8" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Static asset caching (hash-named assets assumed) ----
    location ~* \.(?:css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # ACME challenge for renewals
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API proxy (rate limited)
    location /api/ {
        limit_req zone=req_limit burst=20 nodelay;
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers for API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Deny hidden / sensitive
    location ~ /\. { deny all; }
    location ~ /(package\.json|yarn\.lock|package-lock\.json|\.env.*) { deny all; }
}
