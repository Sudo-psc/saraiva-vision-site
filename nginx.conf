## ------------------------------------------------------------
## Rate limiting zones (placed before servers; file included in http context)
## ------------------------------------------------------------
limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=1r/s;

# Map for real IP detection (if behind CDN/proxy)
map $http_x_forwarded_for $real_ip {
    ~^(\d+\.\d+\.\d+\.\d+) $1;
    default $remote_addr;
}

server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge (prior to redirect) for webroot validations
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;
    server_tokens off;
    client_max_body_size 10m;

    # Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ---- TLS / SSL (modern configuration) ----
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:TLS:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ---- Security Headers (consolidated) ----
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), interest-cohort=(), unload=()" always;

    # Consolidated CSP aligned with current integrations (GTM, GA, Maps JS API, reCAPTCHA v3, Spotify)
    add_header Content-Security-Policy "\
      default-src 'self'; \
      base-uri 'self'; \
      form-action 'self'; \
      frame-ancestors 'self'; \
      object-src 'none'; \
      script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://www.gstatic.com https://www.google.com https://maps.googleapis.com; \
      style-src  'self' 'unsafe-inline' https://fonts.googleapis.com; \
      img-src    'self' data: https:; \
      font-src   'self' https://fonts.gstatic.com; \
      connect-src 'self' https://www.google-analytics.com https://region1.google-analytics.com https://www.googletagmanager.com https://www.gstatic.com https://www.google.com https://maps.googleapis.com https://places.googleapis.com https://maps.gstatic.com; \
      frame-src  'self' https://www.googletagmanager.com https://open.spotify.com https://www.google.com; \
      media-src  'self' https: data:; \
      upgrade-insecure-requests\
    " always;
    
    add_header Cache-Control "no-transform" always;
    add_header X-Robots-Tag "index, follow, snippet, archive" always;

    # ---- Enhanced Compression (Brotli + gzip) ----
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_static on;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/atom+xml
        application/rss+xml
        application/json
        application/xml
        application/xml+rss
        application/xhtml+xml
        image/svg+xml
        font/woff
        font/woff2;

    # ---- Root / SPA ----
    root /var/www/saraiva-vision-site/dist;
    index index.html;

    # ---- Enhanced Asset Caching ----
    # Modern image formats with optimized caching
    location ~* \.(?:avif|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # JavaScript modules MIME type fix - ES6 modules
    location ~* \.m?js$ {
        add_header Content-Type "text/javascript; charset=utf-8" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # JSON files with proper caching
    location ~* \.json$ {
        add_header Content-Type "application/json; charset=utf-8" always;
        expires 1d;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }

    # Static asset caching with enhanced control
    location ~* \.(?:css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable CORS for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot|otf)$) {
            add_header Access-Control-Allow-Origin "*";
        }
        
        try_files $uri =404;
    }
    
    # Manifest and service worker files
    location ~* \.(?:manifest\.json|sw\.js)$ {
        expires 7d;
        add_header Cache-Control "public";
        add_header Content-Type "application/json; charset=utf-8";
        try_files $uri =404;
    }

    # ACME challenge for renewals
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # ---- Enhanced SPA Configuration ----
    # HTML files with no-cache to ensure updates
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri $uri/ /index.html;
    }
    
    # SPA fallback with enhanced headers
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add security headers for HTML responses
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # ---- Enhanced API Proxy with Security ----
    location /api/ {
        limit_req zone=api_limit burst=30 nodelay;
        limit_req_status 429;
        
        # Enhanced proxy settings
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        
        # Security headers for API
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS headers for API endpoints (more restrictive)
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Max-Age' '86400' always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' '86400';
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # ---- Enhanced Security Rules ----
    # Deny hidden files and sensitive files
    location ~ /\. { 
        deny all; 
        access_log off;
        log_not_found off;
    }
    
    # Deny access to sensitive files
    location ~ /(package\.json|yarn\.lock|package-lock\.json|\.env.*|composer\.json|composer\.lock|Dockerfile|docker-compose\.yml|\.git.*|\.svn|\.htaccess|\.htpasswd|web\.config)$ { 
        deny all; 
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup and log files
    location ~* \.(bak|backup|old|orig|save|tmp|temp|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Prevent execution of scripts in uploads directory
    location ^~ /uploads/ {
        location ~ \.(php|phtml|php3|php4|php5|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # Health check endpoint for monitoring
    location = /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt with proper caching
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # Sitemap.xml with proper caching
    location = /sitemap.xml {
        expires 1h;
        add_header Cache-Control "public";
        add_header Content-Type "application/xml; charset=utf-8";
        try_files $uri =404;
    }
}
