# Configuração Nginx para Produção - Saraiva Vision
# Frontend React + WordPress Backend

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# Frontend React Application
server {
    listen 8082;
    listen [::]:8082;
    server_name localhost saraiva-vision.local;

    root /var/www/saraivavision/current;
    index index.html;

    # Standardized headers via includes
    include /etc/nginx/includes/security-headers.conf;
    include /etc/nginx/includes/csp.conf;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # JSON files (translations)
    location ~* \.json$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        include /etc/nginx/includes/security-headers.conf;
        try_files $uri =404;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        include /etc/nginx/includes/security-headers.conf;
    }

    # Web Vitals endpoint fallback (accept GET/OPTIONS/POST)
    location = /web-vitals {
        access_log off;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS, POST" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Content-Type application/json always;
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
        if ($request_method = 'POST') {
            return 204;
        }
        return 200 '{"cls":0,"fid":0,"lcp":0}';
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        try_files $uri =404;
    }

    # Sitemap
    location = /sitemap.xml {
        access_log off;
        try_files $uri =404;
    }

    # WordPress API proxy with rate limiting
    location /wp-json/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://localhost:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache WordPress API responses
        add_header Cache-Control "public, max-age=300";
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # WordPress admin proxy with strict rate limiting
    location /wp-admin/ {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://localhost:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # No caching for admin
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # WordPress login
    location /wp-login.php {
        limit_req zone=login burst=3 nodelay;
        proxy_pass http://localhost:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        include /etc/nginx/includes/security-headers.conf;
        include /etc/nginx/includes/csp.conf;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # React app routing (SPA)
    location / {
        try_files $uri $uri/ /index.html;

        # Add security headers for HTML
        location ~ \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            include /etc/nginx/includes/security-headers.conf;
            include /etc/nginx/includes/csp.conf;
        }
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}

    # WordPress Backend (Internal)
server {
    listen 8083;
    listen [::]:8083;
    server_name localhost wordpress.local;

    root /var/www/cms.saraivavision.local;
    index index.php index.html;

    # Restrict access to local only
    allow 127.0.0.1;
    allow ::1;
    deny all;

    # Standardized security headers (CSP not applied to backend)
    include /etc/nginx/includes/security-headers.conf;

    # PHP handling
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";

        # Security
        fastcgi_hide_header X-Powered-By;

        # Increase timeouts for admin operations
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
    }

    # WordPress uploads
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|svg|woff|woff2|eot|ttf)$ {
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }

    # Block access to sensitive WordPress files
    location ~ /\.(htaccess|htpasswd) {
        deny all;
    }

    location ~ ^/(wp-config\.php|wp-config-sample\.php|readme\.html|license\.txt) {
        deny all;
    }

    location ~ ^/wp-content/uploads/.*\.php$ {
        deny all;
    }

    # WordPress REST API
    location ~ ^/wp-json/ {
        try_files $uri $uri/ /index.php?$args;
    }

    # Disable XML-RPC
    location = /xmlrpc.php {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Fallback server for unmatched hosts
server {
    listen 8082 default_server;
    listen [::]:8082 default_server;
    server_name _;
    return 444;
}
