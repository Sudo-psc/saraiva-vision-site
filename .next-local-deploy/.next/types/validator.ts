// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/agendamento/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agendamento">> = Specific
  const handler = {} as typeof import("../../app/agendamento/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog/[slug]">> = Specific
  const handler = {} as typeof import("../../app/blog/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog">> = Specific
  const handler = {} as typeof import("../../app/blog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contato/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contato">> = Specific
  const handler = {} as typeof import("../../app/contato/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/depoimentos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/depoimentos">> = Specific
  const handler = {} as typeof import("../../app/depoimentos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/duvidas/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/duvidas">> = Specific
  const handler = {} as typeof import("../../app/duvidas/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/equipe/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/equipe">> = Specific
  const handler = {} as typeof import("../../app/equipe/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/familiar/duvidas/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/familiar/duvidas">> = Specific
  const handler = {} as typeof import("../../app/familiar/duvidas/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/familiar/exames/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/familiar/exames">> = Specific
  const handler = {} as typeof import("../../app/familiar/exames/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/familiar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/familiar">> = Specific
  const handler = {} as typeof import("../../app/familiar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/familiar/planos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/familiar/planos">> = Specific
  const handler = {} as typeof import("../../app/familiar/planos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/familiar/prevencao/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/familiar/prevencao">> = Specific
  const handler = {} as typeof import("../../app/familiar/prevencao/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/faq/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/faq">> = Specific
  const handler = {} as typeof import("../../app/faq/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/instagram/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/instagram">> = Specific
  const handler = {} as typeof import("../../app/instagram/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/assinatura/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jovem/assinatura/checkout">> = Specific
  const handler = {} as typeof import("../../app/jovem/assinatura/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/assinatura/manage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jovem/assinatura/manage">> = Specific
  const handler = {} as typeof import("../../app/jovem/assinatura/manage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/assinatura/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jovem/assinatura">> = Specific
  const handler = {} as typeof import("../../app/jovem/assinatura/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/assinatura/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jovem/assinatura/success">> = Specific
  const handler = {} as typeof import("../../app/jovem/assinatura/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jovem">> = Specific
  const handler = {} as typeof import("../../app/jovem/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/laas/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/laas">> = Specific
  const handler = {} as typeof import("../../app/laas/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/lentes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/lentes">> = Specific
  const handler = {} as typeof import("../../app/lentes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/podcasts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/podcasts">> = Specific
  const handler = {} as typeof import("../../app/podcasts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/senior/glossario/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/senior/glossario">> = Specific
  const handler = {} as typeof import("../../app/senior/glossario/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/senior/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/senior">> = Specific
  const handler = {} as typeof import("../../app/senior/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/servicos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/servicos">> = Specific
  const handler = {} as typeof import("../../app/servicos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sobre/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sobre">> = Specific
  const handler = {} as typeof import("../../app/sobre/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/appointments/availability/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/appointments/availability">> = Specific
  const handler = {} as typeof import("../../app/api/appointments/availability/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/appointments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/appointments">> = Specific
  const handler = {} as typeof import("../../app/api/appointments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/blog/[slug]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/blog/[slug]">> = Specific
  const handler = {} as typeof import("../../app/api/blog/[slug]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/blog/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/blog">> = Specific
  const handler = {} as typeof import("../../app/api/blog/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/contact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contact">> = Specific
  const handler = {} as typeof import("../../app/api/contact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/instagram/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/instagram">> = Specific
  const handler = {} as typeof import("../../app/api/instagram/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/laas/leads/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/laas/leads">> = Specific
  const handler = {} as typeof import("../../app/api/laas/leads/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile">> = Specific
  const handler = {} as typeof import("../../app/api/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/reviews/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reviews">> = Specific
  const handler = {} as typeof import("../../app/api/reviews/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/subscription/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/subscription/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/subscription/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/subscription/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/subscription/create">> = Specific
  const handler = {} as typeof import("../../app/api/subscription/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/subscription/manage/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/subscription/manage">> = Specific
  const handler = {} as typeof import("../../app/api/subscription/manage/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/subscription/plans/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/subscription/plans">> = Specific
  const handler = {} as typeof import("../../app/api/subscription/plans/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/subscription/webhook/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/subscription/webhook">> = Specific
  const handler = {} as typeof import("../../app/api/subscription/webhook/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/familiar/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/familiar">> = Specific
  const handler = {} as typeof import("../../app/familiar/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/jovem/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/jovem">> = Specific
  const handler = {} as typeof import("../../app/jovem/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/senior/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/senior">> = Specific
  const handler = {} as typeof import("../../app/senior/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
