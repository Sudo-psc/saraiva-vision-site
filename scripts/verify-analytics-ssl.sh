#!/bin/bash

# Script para verificar o setup do analytics.saraivavision.com.br
echo "üîç Verifica√ß√£o SSL - Analytics Subdomain"
echo "======================================="

ANALYTICS_URL="https://analytics.saraivavision.com.br"

echo -e "\nüìä Testando Conectividade SSL"
echo "------------------------------"
echo "Verificando certificado SSL..."
cert_info=$(openssl s_client -connect analytics.saraivavision.com.br:443 -servername analytics.saraivavision.com.br < /dev/null 2>/dev/null | openssl x509 -noout -subject -dates 2>/dev/null)

if [[ -n "$cert_info" ]]; then
    echo -e "‚úÖ Certificado SSL v√°lido:"
    echo "$cert_info" | sed 's/^/  /'
else
    echo -e "‚ùå Erro ao verificar certificado SSL"
fi

echo -e "\nüìä Testando Arquivos Est√°ticos"
echo "--------------------------------"
echo "GET /static/array.js:"
status=$(curl -s -o /dev/null -w "%{http_code}" "$ANALYTICS_URL/static/array.js")
if [[ "$status" == "200" ]]; then
    echo -e "‚úÖ Status: $status"
    content_type=$(curl -s -I "$ANALYTICS_URL/static/array.js" | grep -i "content-type" | cut -d' ' -f2- | tr -d '\r')
    echo -e "‚úÖ Content-Type: $content_type"
else
    echo -e "‚ùå Status: $status"
fi

echo -e "\nüìä Testando API Endpoints"
echo "-------------------------"
echo "GET /api/health:"
status=$(curl -s -o /dev/null -w "%{http_code}" "$ANALYTICS_URL/api/health")
if [[ "$status" == "200" ]]; then
    echo -e "‚úÖ Status: $status"
    api_response=$(curl -s "$ANALYTICS_URL/api/health")
    api_status=$(echo "$api_response" | jq -r '.status // "unknown"' 2>/dev/null)
    echo -e "‚úÖ API Status: $api_status"
else
    echo -e "‚ùå Status: $status"
fi

echo "POST /api/csp-reports:"
status=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$ANALYTICS_URL/api/csp-reports" -H "Content-Type: application/json" -d '{"csp-report":{"test":"test"}}')
if [[ "$status" == "204" ]]; then
    echo -e "‚úÖ Status: $status"
else
    echo -e "‚ùå Status: $status"
fi

echo -e "\nüìä Verificando Headers de Seguran√ßa"
echo "----------------------------------"
headers=$(curl -s -I "$ANALYTICS_URL/static/array.js" | grep -E "(x-frame-options|x-content-type-options|referrer-policy|permissions-policy|strict-transport-security)" | head -5)
if [[ -n "$headers" ]]; then
    echo "$headers" | sed 's/^/  /'
else
    echo "‚ö†Ô∏è  Nenhum header de seguran√ßa encontrado"
fi

echo -e "\nüìä Testando CORS"
echo "----------------"
echo "Testando CORS do dom√≠nio principal..."
origin_header=$(curl -s -H "Origin: https://saraivavision.com.br" -I "$ANALYTICS_URL/api/health" | grep -i "access-control-allow-origin" | head -1)
if [[ -n "$origin_header" ]]; then
    echo -e "‚úÖ CORS configurado:"
    echo "$origin_header" | sed 's/^/  /'
else
    echo -e "‚ùå CORS n√£o configurado ou inv√°lido"
fi

echo -e "\nüìä Configura√ß√£o Nginx"
echo "---------------------"
echo "Verificando se o site est√° habilitado..."
if [[ -L "/etc/nginx/sites-enabled/analytics.saraivavision.com.br" ]]; then
    echo -e "‚úÖ Site analytics.saraivavision.com.br habilitado"
else
    echo -e "‚ùå Site n√£o habilitado"
fi

echo "Testando configura√ß√£o Nginx..."
nginx_test=$(nginx -t 2>&1 | grep -o "syntax is ok\|test is successful" | head -2)
if [[ -n "$nginx_test" ]]; then
    echo -e "‚úÖ Configura√ß√£o Nginx v√°lida"
    echo "$nginx_test" | sed 's/^/  /'
else
    echo -e "‚ùå Erro na configura√ß√£o Nginx"
fi

echo -e "\nüåê Resumo do Certificado SSL"
echo "--------------------------"
echo "Dom√≠nios cobertos:"
certbot certificates 2>/dev/null | grep -A 5 "saraivavision.com.br" | grep "Domains" | sed 's/.*Domains: //; s/, /\n  /g' | sed 's/^/  /'

echo -e "\nData de expira√ß√£o:"
expiry=$(certbot certificates 2>/dev/null | grep -A 3 "saraivavision.com.br" | grep "Expiry Date" | head -1)
if [[ -n "$expiry" ]]; then
    echo -e "‚úÖ $expiry"
else
    echo -e "‚ùå N√£o foi poss√≠vel obter data de expira√ß√£o"
fi

echo -e "\n‚úÖ Verifica√ß√£o conclu√≠da!"
echo -e "\nüìã Pr√≥ximos passos:"
echo "1. O certificado SSL est√° v√°lido e funcionando"
echo "2. O subdom√≠nio analytics.saraivavision.com.br est√° ativo"
echo "3. APIs est√£o acess√≠veis atrav√©s do subdom√≠nio"
echo "4. Arquivos est√°ticos est√£o sendo servidos corretamente"
echo "5. CORS est√° configurado para o dom√≠nio principal"