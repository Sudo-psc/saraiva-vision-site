#!/bin/bash

# Script para configurar vari√°veis de ambiente xAI no Vercel
# Uso: ./scripts/configure-vercel-xai.sh

echo "üöÄ Configurando xAI no Vercel"
echo "============================="

# Verificar se Vercel CLI est√° instalado
if ! command -v vercel &> /dev/null; then
    echo "‚ùå Vercel CLI n√£o encontrado. Instalando..."
    npm install -g vercel
fi

# Verificar se est√° logado
if ! vercel whoami &> /dev/null; then
    echo "üîê Fazendo login no Vercel..."
    vercel login
fi

echo ""
echo "üìã Configura√ß√£o da API Key do xAI"
echo "1. Acesse: https://console.x.ai"
echo "2. Crie uma conta ou fa√ßa login"
echo "3. Gere uma nova API key"
echo ""

# Solicitar API key
read -p "üîë Cole sua xAI API Key: " XAI_API_KEY

if [ -z "$XAI_API_KEY" ]; then
    echo "‚ùå API Key √© obrigat√≥ria!"
    exit 1
fi

# Configura√ß√µes opcionais
read -p "ü§ñ Modelo xAI (padr√£o: grok-2-1212): " XAI_MODEL
XAI_MODEL=${XAI_MODEL:-grok-2-1212}

read -p "üéØ Max Tokens (padr√£o: 8192): " XAI_MAX_TOKENS
XAI_MAX_TOKENS=${XAI_MAX_TOKENS:-8192}

read -p "üå°Ô∏è Temperature (padr√£o: 0.1): " XAI_TEMPERATURE
XAI_TEMPERATURE=${XAI_TEMPERATURE:-0.1}

echo ""
echo "‚öôÔ∏è Configurando vari√°veis no Vercel..."

# Configurar vari√°veis para todos os ambientes
echo "üìù Configurando XAI_API_KEY..."
echo "$XAI_API_KEY" | vercel env add XAI_API_KEY production
echo "$XAI_API_KEY" | vercel env add XAI_API_KEY preview
echo "$XAI_API_KEY" | vercel env add XAI_API_KEY development

echo "üìù Configurando XAI_MODEL..."
echo "$XAI_MODEL" | vercel env add XAI_MODEL production
echo "$XAI_MODEL" | vercel env add XAI_MODEL preview
echo "$XAI_MODEL" | vercel env add XAI_MODEL development

echo "üìù Configurando XAI_MAX_TOKENS..."
echo "$XAI_MAX_TOKENS" | vercel env add XAI_MAX_TOKENS production
echo "$XAI_MAX_TOKENS" | vercel env add XAI_MAX_TOKENS preview
echo "$XAI_MAX_TOKENS" | vercel env add XAI_MAX_TOKENS development

echo "üìù Configurando XAI_TEMPERATURE..."
echo "$XAI_TEMPERATURE" | vercel env add XAI_TEMPERATURE production
echo "$XAI_TEMPERATURE" | vercel env add XAI_TEMPERATURE preview
echo "$XAI_TEMPERATURE" | vercel env add XAI_TEMPERATURE development

# Atualizar .env local
echo ""
echo "üìÑ Atualizando .env local..."

# Backup do .env atual
cp .env .env.backup.$(date +%Y%m%d_%H%M%S)

# Atualizar vari√°veis no .env
sed -i.bak "s/^XAI_API_KEY=.*/XAI_API_KEY=$XAI_API_KEY/" .env
sed -i.bak "s/^XAI_MODEL=.*/XAI_MODEL=$XAI_MODEL/" .env
sed -i.bak "s/^XAI_MAX_TOKENS=.*/XAI_MAX_TOKENS=$XAI_MAX_TOKENS/" .env
sed -i.bak "s/^XAI_TEMPERATURE=.*/XAI_TEMPERATURE=$XAI_TEMPERATURE/" .env

# Remover arquivo de backup do sed
rm .env.bak

echo "‚úÖ .env local atualizado"

echo ""
echo "üéâ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Verificar configura√ß√£o: vercel env ls"
echo "2. Deploy da aplica√ß√£o: npm run deploy"
echo "3. Testar chatbot: node test-xai-chatbot.js"
echo ""
echo "üí° Para verificar se funcionou:"
echo "   curl -X POST https://seu-dominio.vercel.app/api/chatbot \\"
echo "   -H 'Content-Type: application/json' \\"
echo "   -d '{\"message\": \"Ol√°, teste do xAI\"}'"