# Docker Compose override for custom Dockerfiles
version: "3.9"

services:
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
    volumes:
      - wp_data:/var/www/html
      - ./wp-config-extra.php:/var/www/html/wp-config-extra.php:ro
      - ./php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
      - wordpress_logs:/var/log/wordpress
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wp
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - WORDPRESS_DOMAIN=https://${DOMAIN}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wp_data:/var/www/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/snippets/:/etc/nginx/snippets/:ro
      - nginx_ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - wordpress
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wp
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - db_logs:/var/log/mysql
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --innodb-flush-method=O_DIRECT
      --innodb-flush-log-at-trx-commit=2
      --query-cache-type=1
      --query-cache-size=64M
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "wp", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  db_data:
    driver: local
  wp_data:
    driver: local
  redis_data:
    driver: local
  nginx_ssl:
    driver: local
  certbot_data:
    driver: local
  certbot_www:
    driver: local
  wordpress_logs:
    driver: local
  nginx_logs:
    driver: local
  db_logs:
    driver: local
  redis_logs:
    driver: local

networks:
  wordpress-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16