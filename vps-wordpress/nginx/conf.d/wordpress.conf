# WordPress headless CMS server configuration
upstream php-fpm {
    server wordpress:9000;
    keepalive 32;
}

# Rate limiting maps
map $request_uri $limit_key {
    ~*/wp-admin/admin-ajax.php login;
    ~*/wp-login.php login;
    ~*/graphql api;
    default general;
}

# Security map for blocking malicious requests
map $request_uri $blocked {
    ~*/(wp-config\.php|wp-config\.txt|wp-config\.bak) 1;
    ~*/\.env 1;
    ~*/\.git 1;
    ~*/\.svn 1;
    ~*/readme\.html 1;
    ~*/license\.txt 1;
    default 0;
}

# HTTP server (redirect to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name cms.saraivavision.com.br;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cms.saraivavision.com.br;

    root /var/www/html;
    index index.php index.html index.htm;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/cms.saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.saraivavision.com.br/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/cms.saraivavision.com.br/chain.pem;

    # Include SSL snippets
    include /etc/nginx/snippets/ssl-params.conf;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # CORS headers for GraphQL
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age "86400" always;

    # Connection limits
    limit_conn conn_limit_per_ip 10;
    limit_conn conn_limit_per_server 100;

    # Block malicious requests
    if ($blocked) {
        return 403;
    }

    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # WordPress health check
    location /wp-health {
        try_files $uri /index.php?$args;
        access_log off;
    }

    # GraphQL endpoint with rate limiting
    location /graphql {
        limit_req zone=api burst=20 nodelay;
        
        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization, X-Requested-With' always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        try_files $uri /index.php?$args;
        
        # FastCGI settings
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        fastcgi_param QUERY_STRING $args;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        
        # FastCGI caching for GraphQL (optional)
        # fastcgi_cache_bypass $skip_cache;
        # fastcgi_no_cache $skip_cache;
        # fastcgi_cache WORDPRESS;
        # fastcgi_cache_valid 200 60m;
    }

    # WordPress admin with strict rate limiting
    location ~* /wp-admin/ {
        limit_req zone=login burst=5 nodelay;
        
        try_files $uri $uri/ /index.php?$args;
        
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            
            # Increase timeouts for admin
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }
    }

    # WordPress login with rate limiting
    location = /wp-login.php {
        limit_req zone=login burst=3 nodelay;
        
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
    }

    # WordPress AJAX with rate limiting
    location = /wp-admin/admin-ajax.php {
        limit_req zone=api burst=10 nodelay;
        
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
    }

    # Static files with long expiration
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|zip|tar|bz2|rar|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
        
        try_files $uri =404;
    }

    # WordPress uploads directory
    location ~* /wp-content/uploads/.*\.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
    }

    # Protect sensitive files
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf|bak|backup|swp|tmp)$ {
        deny all;
    }

    # Protect wp-config and other sensitive files
    location ~* /(wp-config\.php|wp-config\.txt|readme\.html|license\.txt) {
        deny all;
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # WordPress pretty permalinks
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP files processing
    location ~ \.php$ {
        # Security check
        try_files $uri =404;
        
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        
        # FastCGI settings
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 60;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
    }

    # Deny access to any files with a .php extension in the uploads directory
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    # WordPress XML-RPC (disable for security)
    location = /xmlrpc.php {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        try_files $uri /index.php?$args;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}