# SaraivaVision Local Development Configuration
# Simplified configuration for local development and testing

# Upstream for local WordPress mock
upstream wordpress_local {
    server 127.0.0.1:8081;
    keepalive 2;
}

# Rate limiting (more permissive for development)
limit_req_zone $binary_remote_addr zone=dev_api:10m rate=60r/m;

# Local HTTP server (no SSL required for development)
server {
    listen 8080;
    listen [::]:8080;
    server_name localhost saraivavision.local;
    
    # Basic server settings
    server_tokens off;
    client_max_body_size 50m;
    
    # Document root (for local builds)
    root /Users/philipecruz/saraiva-vision-site/dist;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/saraivavision-local-access.log;
    error_log /var/log/nginx/saraivavision-local-error.log info;
    
    # WordPress API proxy (to local mock server)
    location ~ ^/(wp-json|wp-admin|wp-login\.php) {
        proxy_pass http://wordpress_local;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS for development
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # API endpoints (for local serverless functions)
    location /api/ {
        limit_req zone=dev_api burst=20 nodelay;
        
        # Development CORS
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        if ($request_method = OPTIONS) {
            return 204;
        }
        
        try_files $uri $uri/ @api_not_found;
    }
    
    # Static assets (no long caching for development)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header X-Dev-Mode "true";
        
        try_files $uri =404;
    }
    
    # Service Worker (immediate updates in dev)
    location = /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires 0;
        try_files $uri =404;
    }
    
    # Health check
    location = /health {
        access_log off;
        return 200 '{"status":"ok","env":"development","timestamp":"$time_iso8601"}';
        add_header Content-Type "application/json";
    }
    
    # Main SPA application
    location / {
        # Try file first, then index.html for SPA routing
        try_files $uri $uri/ /index.html;
        
        # No caching for HTML in development
        add_header Cache-Control "no-cache, must-revalidate";
        add_header X-Dev-Mode "true";
    }
    
    # API not found fallback
    location @api_not_found {
        return 404 '{"error":"API endpoint not found","path":"$uri"}';
        add_header Content-Type "application/json";
    }
    
    # Development error pages
    error_page 404 /dev-404.html;
    error_page 500 502 503 504 /dev-50x.html;
    
    location = /dev-404.html {
        return 404 '{"error":"Not Found","message":"Development server - file not found","path":"$uri"}';
        add_header Content-Type "application/json";
    }
    
    location = /dev-50x.html {
        return 500 '{"error":"Server Error","message":"Development server error"}';
        add_header Content-Type "application/json";
    }
}

# Redirect from port 80 to development port (if needed)
server {
    listen 80;
    server_name saraivavision.local localhost;
    
    return 301 http://$host:8080$request_uri;
}