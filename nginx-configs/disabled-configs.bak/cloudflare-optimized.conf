# Saraiva Vision - Cloudflare Optimized Nginx Configuration
# This configuration is optimized for use with Cloudflare proxy

# Rate limiting zones - adjusted for Cloudflare compatibility
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=contact:10m rate=20r/m;

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge for SSL certificate renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server with Cloudflare optimization
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # SSL Configuration - Cloudflare Full SSL mode
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;

    # SSL Security settings optimized for Cloudflare
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Cloudflare IP ranges for real IP detection
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    real_ip_header CF-Connecting-IP;

    # Security Headers - Cloudflare compatible
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Medical website security headers
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    # Content Security Policy - Cloudflare optimized
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self'
                   'unsafe-inline'
                   https://www.googletagmanager.com
                   https://www.google-analytics.com
                   https://tagmanager.google.com
                   https://connect.facebook.net
                   https://www.facebook.com
                   https://js.hsforms.net
                   https://forms.hsforms.com
                   https://ajax.cloudflare.com;
        style-src 'self'
                  'unsafe-inline'
                  https://fonts.googleapis.com
                  https://tagmanager.google.com;
        font-src 'self'
                 https://fonts.gstatic.com
                 data:;
        img-src 'self'
                https:
                data:
                blob:
                https://www.google-analytics.com
                https://www.googletagmanager.com
                https://www.facebook.com
                https://connect.facebook.net;
        connect-src 'self'
                    https://api.resend.com
                    https://www.google-analytics.com
                    https://analytics.google.com
                    https://www.googletagmanager.com
                    https://region1.google-analytics.com
                    https://www.facebook.com
                    https://connect.facebook.net
                    wss://connect.facebook.net
                    https://forms.hsforms.com
                    https://api.hsforms.com
                    https://ajax.cloudflare.com;
        frame-src 'self'
                  https://www.google.com
                  https://recaptcha.google.com
                  https://www.facebook.com
                  https://connect.facebook.net
                  https://forms.hsforms.com;
        object-src 'none';
        base-uri 'self';
        form-action 'self'
                    https://forms.hsforms.com;
        frame-ancestors 'none';
        upgrade-insecure-requests;
    " always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Static assets with Cloudflare-optimized caching
    location ~* \.(js|css|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        proxy_pass http://frontend:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Long-term caching for static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Cloudflare-specific headers
        add_header X-Content-Source "static";

        access_log off;
    }

    # Special handling for PNG files including logo.png
    location ~* \.png$ {
        proxy_pass http://frontend:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        add_header X-Content-Source "static";

        access_log off;
    }

    # Ensure logo.png is always available with fallback
    location = /logo.png {
        try_files $uri =404;
        add_header Cache-Control "public, max-age=31536000";
        add_header X-Content-Source "static";
    }

    # Special handling for PWA files
    location ~* \.(webmanifest|xml|txt)$ {
        proxy_pass http://frontend:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Cache-Control "public, max-age=86400";
        add_header X-Content-Source "static";
    }

    # SPA routing - serve index.html for all routes
    location / {
        proxy_pass http://frontend:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Visitor $http_cf_visitor;

        proxy_intercept_errors on;
        error_page 404 = @spa_fallback;

        # Cloudflare compatible cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    location @spa_fallback {
        proxy_pass http://frontend:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Visitor $http_cf_visitor;
    }

    # API endpoints with rate limiting and Cloudflare optimization
    location /api/ {
        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        proxy_set_header CF-RAY $http_cf_ray;

        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

        # Cloudflare compatible headers
        add_header Cache-Control "no-cache, no-store, must-revalidate, private";

        # Rate limiting for sensitive endpoints
        limit_req zone=api burst=10 nodelay;
    }

    # WordPress proxy with Cloudflare optimization
    location /wp-admin/ {
        proxy_pass http://localhost:8083/wp-admin/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        proxy_set_header CF-RAY $http_cf_ray;

        # Admin area should never be cached
        add_header Cache-Control "no-cache, no-store, must-revalidate, private";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # Reduced rate limiting - Cloudflare provides additional protection
        limit_req zone=login burst=5 nodelay;
    }

    location /wp-json/ {
        proxy_pass http://localhost:8083/wp-json/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        proxy_set_header CF-RAY $http_cf_ray;

        # API can be cached by Cloudflare
        add_header Cache-Control "public, max-age=300";
    }

    # Security: deny access to sensitive files
    location ~* \.(env|log|htaccess|htpasswd|git|svn|DS_Store)$ {
        deny all;
        return 404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"nginx","timestamp":"healthy","version":"1.0.0","environment":"production"}';
        add_header Content-Type application/json;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
}