# NOTE (cleanup 2025-08-31):
# - Removido bloco ACME duplicado no servidor HTTPS (suficiente manter no :80 para renew).
# - Corrigido location aninhado ("location = /index.html" dentro de outro location não é suportado pelo Nginx) movendo para nível superior.
# - Este arquivo é considerado a configuração PROD principal. Demais arquivos *saraivavision.conf* e *saraivavision-http.conf* foram marcados como legados.

server {
    listen 80;
    listen [::]:80;
    server_name saraivavision.com.br www.saraivavision.com.br;

    # ACME challenge (prior to redirect) for webroot validations
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type text/plain;
    }

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name saraivavision.com.br www.saraivavision.com.br;
    server_tokens off;
    client_max_body_size 10m;

    # Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ---- TLS / SSL (modern configuration) ----
    ssl_certificate /etc/letsencrypt/live/saraivavision.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/saraivavision.com.br/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:TLS:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/saraivavision.com.br/chain.pem;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Includes compartilhados
    include /etc/nginx/includes/security-headers.conf;
    include /etc/nginx/includes/csp.conf;
    add_header X-Robots-Tag "index, follow, snippet, archive" always;

    # ---- Enhanced Compression (Brotli + gzip) ----
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Gzip compression (fallback)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Root directory for the SPA build (canonical symlink managed by deploy.sh)
    root /var/www/saraivavision/current;
    index index.html;

    # ---- Rate Limiting (aplicar em todas as location críticas) ----
    # Limitação aplicada aqui dentro do server block

    # ---- Static files: cache agressivamente ----
    location ~* \.(js|css|woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        etag off;
    }

    # ---- Static assets (imagens, JSON, etc.): cache moderado ----
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif|json)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
        etag on;
    }

    # ---- HTML files: no-cache para refletir deploy imediato ----
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        etag off;
        try_files $uri $uri/ /index.html;
    }

    # ---- API routes: proxy to Node.js on port 3001 ----
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        # CORS handling
        if ($cors_origin) {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            add_header Access-Control-Allow-Credentials true always;
        }

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts específicos para API
        proxy_connect_timeout       10s;
        proxy_send_timeout          30s;
        proxy_read_timeout          30s;
    }

    # ---- WordPress API proxy: forward to WordPress on port 8083 ----
    location /wp-json/ {
        limit_req zone=api_limit burst=15 nodelay;

        # CORS headers for WordPress API
        add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
        add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
        add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header Access-Control-Allow-Credentials true always;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://localhost:8083;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin "https://saraivavision.com.br";

        # Cache for WordPress API responses
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;

        # Timeouts específicos para WordPress API
        proxy_connect_timeout       10s;
        proxy_send_timeout          30s;
        proxy_read_timeout          30s;
    }

    # Rate limit (sem burst) para login/auth
    location /api/auth/ {
        limit_req zone=login_limit;
        # Resto das configurações iguais ao /api/
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # ---- Security and anti-bot measures ----
    # Block common exploits
    location ~ /(\.git|\.env|composer\.|package\.json|yarn\.lock|\.DS_Store) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Block PHP execution attempts
    location ~ \.php$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Security through obscurity: fake admin paths to trap bots
    location ~ ^/(wp-admin|admin|administrator|phpmyadmin|xmlrpc\.php) {
        access_log /var/log/nginx/blocked_bots.log;
        return 404;
    }

    # Rate limit on root to avoid brute force on main site
    location = / {
        limit_req zone=req_limit burst=5 nodelay;
        try_files $uri $uri/ /index.html;
    }

    # Rate limit genérico em todas as outras rotas
    location / {
        limit_req zone=req_limit burst=20 nodelay;
        try_files $uri $uri/ /index.html;
    }

    # ---- Specific caching directives ----

    # Service worker - cache muito curto
    location = /sw.js {
        expires 1m;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri =404;
    }

    # Workbox service worker - cache muito curto
    location = /workbox-sw.js {
        expires 1m;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri =404;
    }

    # Manifest - cache curto
    location = /site.webmanifest {
        expires 1h;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Robots.txt - cache moderado
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
        access_log off;
    }

    # Sitemap.xml - cache moderado
    location = /sitemap.xml {
        expires 6h;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # index.html sem cache para updates imediatos
    location = /index.html {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri =404;
    }

    # Favicon - cache longo
    location = /favicon.ico {
        expires 30d;
        add_header Cache-Control "public";
        try_files $uri =404;
        access_log off;
    }

    # ---- Error pages ----
    # Custom 404 page (opcional, se você tiver uma)
    error_page 404 /index.html;

    # Logging
    access_log /var/log/nginx/saraivavision_access.log;
    error_log /var/log/nginx/saraivavision_error.log warn;
}
