version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      api:
        condition: service_healthy
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3002"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3001:3001"
      - "9229:9229"
    volumes:
      - ./server.js:/app/server.js:cached
      - ./api:/app/api:cached
      - ./.env.development:/app/.env:cached
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - WORDPRESS_URL=http://wordpress:8083
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    command: ["node", "--inspect=0.0.0.0:9229", "server.js"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3001"

  wordpress:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
    volumes:
      - ./wordpress-local:/var/www/html:cached
      - wordpress_data:/var/www/html/wp-content/uploads
      - ./wordpress-plugins:/var/www/html/wp-content/plugins/saraiva-vision:cached
    environment:
      - WORDPRESS_DEBUG=true
      - WORDPRESS_DB_HOST=localhost
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
      - WP_HOME=http://localhost:8083
      - WP_SITEURL=http://localhost:8083
    healthcheck:
      test: ["CMD", "pgrep", "php-fpm"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.localhost`)"
      - "traefik.http.routers.wordpress.entrypoints=web"
      - "traefik.http.services.wordpress.loadbalancer.server.port=8083"

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./nginx-health.conf:/etc/nginx/nginx.conf:cached
      - ./nginx-configs:/etc/nginx/conf.d:cached
      - ./nginx-logs:/var/log/nginx:cached
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - NGINX_HOST=localhost
      - FRONTEND_HOST=frontend:3002
      - API_HOST=api:3001
      - WORDPRESS_HOST=wordpress:8083
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      frontend:
        condition: service_started
      api:
        condition: service_healthy
      wordpress:
        condition: service_healthy
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  # Health monitoring service
  health-monitor:
    image: curlimages/curl:latest
    container_name: health-monitor
    depends_on:
      frontend:
        condition: service_healthy
      api:
        condition: service_healthy
      wordpress:
        condition: service_healthy
      nginx:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Starting health monitoring...' &&
        while true; do
          echo '=== Health Check at $$(date) ===' &&
          curl -f http://nginx/health || echo 'Nginx unhealthy' &&
          curl -f http://frontend:3002/health || echo 'Frontend unhealthy' &&
          curl -f http://api:3001/api/health || echo 'API unhealthy' &&
          docker exec saraiva-vision-site-v3-wordpress-1 pgrep php-fpm || echo 'WordPress unhealthy' &&
          echo '=== All checks completed ===' &&
          sleep 30;
        done
      "
    networks:
      - internal

volumes:
  wordpress_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
