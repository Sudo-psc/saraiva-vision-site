version: '3.8'

# Saraiva Vision Container Networking Configuration
# This file defines advanced networking configurations for both development and production environments

# Development Networking Configuration
networks:
  # Internal isolated network for service communication
  internal:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      - "com.docker.compose.network=internal"
      - "saraiva.vision.environment=development"

  # Development-specific overlay network
  development:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1
    labels:
      - "com.docker.compose.network=development"
      - "saraiva.vision.environment=development"

# Production Networking Configuration
x-production-networks:
  &production-networks
  # Internal isolated network for production services
  internal:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
    internal: true  # No external access
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1
    labels:
      - "com.docker.compose.network=internal"
      - "saraiva.vision.environment=production"
      - "security.isolation=true"

  # External network for internet access
  external:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
          gateway: 172.31.0.1
    labels:
      - "com.docker.compose.network=external"
      - "saraiva.vision.environment=production"

  # Database-specific network for additional security
  database:
    driver: bridge
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.32.0.0/16
          gateway: 172.32.0.1
    labels:
      - "com.docker.compose.network=database"
      - "saraiva.vision.environment=production"
      - "security.level=high"

# Service Discovery Configuration
x-service-discovery:
  &service-discovery
  # DNS resolution configuration
  dns:
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1
  dns_search:
    - saraiva-vision.local
    - internal.saraiva-vision.local

  # Container hostname configuration
  hostname: {{.Service.Name}}.saraiva-vision.local

  # Custom DNS entries for local service discovery
  extra_hosts:
    - "frontend.saraiva-vision.local:172.20.0.10"
    - "api.saraiva-vision.local:172.20.0.20"
    - "wordpress.saraiva-vision.local:172.20.0.30"
    - "db.saraiva-vision.local:172.20.0.40"
    - "nginx.saraiva-vision.local:172.20.0.50"
    - "redis.saraiva-vision.local:172.20.0.60"

# Security and Performance Network Settings
x-network-security:
  &network-security
  # Network security constraints
  sysctls:
    net.core.somaxconn: 65535
    net.ipv4.tcp_max_syn_backlog: 65535
    net.ipv4.tcp_syncookies: 1
    net.ipv4.tcp_tw_reuse: 1
    net.ipv4.tcp_fin_timeout: 30
    net.ipv4.tcp_keepalive_time: 120
    net.ipv4.tcp_max_tw_buckets: 8000
    net.ipv4.ip_local_port_range: 1024 65000

  # Resource limits
  deploy:
    resources:
      limits:
        cpus: '1.0'
        memory: 1G
      reservations:
        cpus: '0.5'
        memory: 512M

# Load Balancing Configuration
x-load-balancing:
  &load-balancing
  labels:
    - "traefik.enable=true"
    - "traefik.docker.network=internal"
    - "traefik.http.routers.{{.Service.Name}}.rule=Host(`{{.Service.Name}}.saraiva-vision.local`)"
    - "traefik.http.routers.{{.Service.Name}}.entrypoints=web"
    - "traefik.http.services.{{.Service.Name}}.loadbalancer.server.port={{.Service.Port}}"

# Health Check Network Configuration
x-health-networking:
  &health-networking
  healthcheck:
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s

  # Network connectivity verification
  networks:
    - internal

# Production-specific Network Security
x-production-network-security:
  &production-network-security
  cap_drop:
    - ALL
  cap_add:
    - CHOWN
    - NET_BIND_SERVICE
    - SETGID
    - SETUID

  # Read-only filesystem where possible
  read_only: true

  # Security hardening
  security_opt:
    - no-new-privileges:true
    - apparmor:docker-default

  # Resource constraints
  deploy:
    resources:
      limits:
        cpus: '0.5'
        memory: 512M
      reservations:
        cpus: '0.25'
        memory: 256M

# Service-to-Service Communication Rules
x-service-communication:
  &service-communication
  # Container links for explicit service discovery
  links:
    - "frontend:frontend.saraiva-vision.local"
    - "api:api.saraiva-vision.local"
    - "wordpress:wordpress.saraiva-vision.local"
    - "db:db.saraiva-vision.local"
    - "redis:redis.saraiva-vision.local"

  # Network aliases for service discovery
  network_mode: bridge

  # Environment variables for service discovery
  environment:
    - SERVICE_DISCOVERY=dns
    - CONSUL_ENABLED=false
    - ETCD_ENABLED=false

# Development-specific Network Settings
x-development-networking:
  &development-networking
  networks:
    - internal
    - development

  # Development-specific DNS
  dns:
    - 127.0.0.1
    - 8.8.8.8

  # Development hostname
  hostname: {{.Service.Name}}.dev.saraiva-vision.local

  # Extra hosts for development
  extra_hosts:
    - "host.docker.internal:host-gateway"
    - "frontend.dev.saraiva-vision.local:172.21.0.10"
    - "api.dev.saraiva-vision.local:172.21.0.20"
    - "wordpress.dev.saraiva-vision.local:172.21.0.30"
    - "nginx.dev.saraiva-vision.local:172.21.0.50"

# Production-specific Network Settings
x-production-networking-config:
  &production-networking-config
  networks:
    - internal
    - external
    - database

  # Production DNS
  dns:
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1

  # Production hostname
  hostname: {{.Service.Name}}.prod.saraiva-vision.local

  # Security and isolation
  network_mode: bridge

  # Service discovery configuration
  extra_hosts:
    - "frontend.prod.saraiva-vision.local:172.30.0.10"
    - "api.prod.saraiva-vision.local:172.30.0.20"
    - "wordpress.prod.saraiva-vision.local:172.30.0.30"
    - "db.prod.saraiva-vision.local:172.32.0.10"
    - "redis.prod.saraiva-vision.local:172.30.0.40"

# Network monitoring and logging
x-network-monitoring:
  &network-monitoring
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "network={{.Network.Name}},service={{.Service.Name}}"

  # Network metrics collection
  labels:
    - "prometheus.io/scrape=true"
    - "prometheus.io/port={{.Service.Port}}"
    - "prometheus.io/path=/metrics"

# Service discovery health checks
x-service-discovery-health:
  &service-discovery-health
  healthcheck:
    test: ["CMD", "wget", "--spider", "-q", "http://localhost:{{.Service.Port}}/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s

  # Service discovery verification
  command: >
    sh -c "
      echo 'Verifying service discovery...' &&
      nslookup frontend.saraiva-vision.local &&
      nslookup api.saraiva-vision.local &&
      nslookup wordpress.saraiva-vision.local &&
      echo 'Service discovery verification complete'
    "

# Container networking optimization
x-network-optimization:
  &network-optimization
  # Network performance tuning
  sysctls:
    net.core.rmem_max: 16777216
    net.core.wmem_max: 16777216
    net.ipv4.tcp_rmem: "4096 87380 16777216"
    net.ipv4.tcp_wmem: "4096 65536 16777216"
    net.core.netdev_max_backlog: 5000
    net.ipv4.tcp_congestion_control: cubic

  # Buffer sizes optimization
  deploy:
    resources:
      limits:
        cpus: '0.5'
        memory: 256M
      reservations:
        cpus: '0.25'
        memory: 128M