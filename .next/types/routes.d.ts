// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/"
type AppRouteHandlerRoutes = "/api/config" | "/api/google-reviews"
type PageRoutes = "/AboutPage" | "/AdminPage" | "/AgendamentoPage" | "/AssinaturaPage" | "/AssinePage" | "/CheckPage" | "/FAQPage" | "/GoogleReviewsTestPage" | "/HomePage" | "/HomePageDebug" | "/HomePageLayout" | "/LensesPage" | "/LensesPageSimple" | "/MapTestPage" | "/MedicalArticleExample" | "/NotFoundPage" | "/PodcastPage" | "/PodcastPageConsolidated" | "/PodcastPageEnhanced" | "/PrivacyPolicyPage" | "/ServiceDetailPage" | "/ServicesPage" | "/ServicesPageCorrected" | "/__tests__/ComplianceWarnings.test" | "/__tests__/PodcastPage.test" | "/__tests__/ServiceDetailPage.test"
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/ingest/[[...path]]" | "/ingest/static/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/__tests__/ComplianceWarnings.test": {}
  "/__tests__/PodcastPage.test": {}
  "/__tests__/ServiceDetailPage.test": {}
  "/AboutPage": {}
  "/AdminPage": {}
  "/AgendamentoPage": {}
  "/api/config": {}
  "/api/google-reviews": {}
  "/AssinaturaPage": {}
  "/AssinePage": {}
  "/CheckPage": {}
  "/FAQPage": {}
  "/GoogleReviewsTestPage": {}
  "/HomePage": {}
  "/HomePageDebug": {}
  "/HomePageLayout": {}
  "/ingest/[[...path]]": { "path"?: string[]; }
  "/ingest/static/[[...path]]": { "path"?: string[]; }
  "/LensesPage": {}
  "/LensesPageSimple": {}
  "/MapTestPage": {}
  "/MedicalArticleExample": {}
  "/NotFoundPage": {}
  "/PodcastPage": {}
  "/PodcastPageConsolidated": {}
  "/PodcastPageEnhanced": {}
  "/PrivacyPolicyPage": {}
  "/ServiceDetailPage": {}
  "/ServicesPage": {}
  "/ServicesPageCorrected": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
