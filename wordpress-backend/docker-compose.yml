version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: saraiva-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress_db
      MYSQL_USER: wordpress_user
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD:-wordpress_password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "3307:3306"
    networks:
      - saraiva-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: saraiva-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6380:6379"
    networks:
  wordpress:
    image: wordpress:php8.1-fpm
    container_name: saraiva-wordpress
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: wordpress_user
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD:-wordpress_password}
      WORDPRESS_DB_NAME: wordpress_db
    volumes:
      - wordpress_data:/var/www/html
      - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - saraiva-network
     image: node:18-alpine
     container_name: saraiva-api
     restart: unless-stopped
     working_dir: /app
     command: npm start
     environment:
       - NODE_ENV=production
       - PORT=3001
     volumes:
       - ../api:/app
     depends_on:
       - mysql
       - redis
     networks:
       - saraiva-network
     healthcheck:
       test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 3

  # Nginx Frontend + Proxy
  nginx:
    image: nginx:alpine
    container_name: saraiva-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_build:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d

      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - wordpress
      - api
    networks:
      - saraiva-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  wordpress_data:
  frontend_build:

networks:
  saraiva-network:
    driver: bridge
