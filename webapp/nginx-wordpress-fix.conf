# Configuração corrigida do WordPress para Saraiva Vision
# Este arquivo deve substituir ou complementar a configuração existente

# Adições ao bloco server principal (porta 443)
# Adicione estas locations ao seu nginx.conf principal:

    # ====== WORDPRESS CMS INTEGRATION ======
    # Blog location with proper routing
    location /blog {
        # Remove trailing slash to prevent double slashes
        rewrite ^/blog/(.*)$ /$1 break;
        
        # Proxy to WordPress backend
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Fix WordPress URLs
        proxy_redirect http://127.0.0.1:8083/ /blog/;
        proxy_redirect http://localhost:8083/ /blog/;
        proxy_redirect https://saraivavision.com.br/ /blog/;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Blog admin access
    location ~ ^/blog/wp-admin {
        # Security: Rate limiting for admin area
        limit_req zone=login burst=5 nodelay;
        
        # Rewrite to remove /blog prefix for backend
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Fix redirect URLs
        proxy_redirect http://127.0.0.1:8083/wp-admin /blog/wp-admin;
        proxy_redirect http://localhost:8083/wp-admin /blog/wp-admin;
        
        # No caching for admin
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        
        # Security headers
        include /etc/nginx/nginx-includes/security-headers.conf;
    }
    
    # Blog login page
    location = /blog/wp-login.php {
        limit_req zone=login burst=2 nodelay;
        
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fix redirect after login
        proxy_redirect http://127.0.0.1:8083/wp-admin /blog/wp-admin;
        proxy_redirect http://localhost:8083/wp-admin /blog/wp-admin;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # WordPress AJAX
    location = /blog/wp-admin/admin-ajax.php {
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS for AJAX
        add_header Access-Control-Allow-Origin "https://saraivavision.com.br" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    }
    
    # WordPress includes (CSS/JS)
    location ~ ^/blog/wp-includes {
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static files
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # WordPress content (uploads, themes, plugins)
    location ~ ^/blog/wp-content {
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache media files
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # WordPress REST API
    location ~ ^/blog/wp-json {
        rewrite ^/blog/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Cache API responses briefly
        add_header Cache-Control "public, max-age=300" always;
    }
    
    # Direct wp-admin access (redirect to /blog/wp-admin)
    location = /wp-admin {
        return 301 https://$host/blog/wp-admin/;
    }
    
    location ~ ^/wp-admin {
        return 301 https://$host/blog$request_uri;
    }
    
    # WordPress JSON API at root level
    location /wp-json {
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
        
        # Cache control
        add_header Cache-Control "public, max-age=300" always;
    }