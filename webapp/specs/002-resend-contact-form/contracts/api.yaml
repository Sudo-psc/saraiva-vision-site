openapi: 3.0.0
info:
  title: SaraivaVision Contact API
  description: Medical contact form API with Resend email integration
  version: 1.0.0
  contact:
    name: SaraivaVision Technical Team
    email: tech@saraivavision.com.br
  license:
    name: Proprietary

servers:
  - url: https://saraivavision.com.br/api
    description: Production server
  - url: http://localhost:3001/api
    description: Development server

security:
  - rateLimit: []

paths:
  /contact:
    post:
      summary: Submit patient contact form
      description: |
        Processes patient contact form submissions and sends structured emails
        to Dr. Philipe. Includes rate limiting, validation, and LGPD compliance.

        **Rate Limits**: 5 submissions per IP per hour
        **Data Retention**: No data stored (direct email delivery only)
        **Compliance**: LGPD compliant with explicit consent required

      operationId: submitContactForm
      tags:
        - Contact Form

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactSubmission"
            examples:
              valid_submission:
                summary: Valid patient contact submission
                value:
                  name: "João Silva"
                  email: "joao.silva@email.com"
                  phone: "+55 11 99999-9999"
                  message: "Gostaria de agendar uma consulta para avaliar minha visão. Tenho sentido dificuldades para enxergar objetos distantes."
                  consent: true
              minimal_submission:
                summary: Minimal required fields only
                value:
                  name: "Maria Santos"
                  email: "maria.santos@email.com"
                  message: "Preciso de informações sobre cirurgia de catarata."
                  consent: true

      responses:
        "200":
          description: Email sent successfully to Dr. Philipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              examples:
                success:
                  summary: Successful email delivery
                  value:
                    success: true
                    message: "Sua mensagem foi enviada com sucesso! Dr. Philipe entrará em contato em breve."
                    submissionId: "550e8400-e29b-41d4-a716-446655440000"
                    estimatedDelivery: "2025-09-11T14:30:00Z"

        "400":
          description: Validation error in request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
              examples:
                validation_error:
                  summary: Multiple validation errors
                  value:
                    success: false
                    message: "Por favor, corrija os erros abaixo"
                    error: "validation_failed"
                    code: "VALIDATION_ERROR"
                    fieldErrors:
                      email: ["Formato de email inválido"]
                      message: ["A mensagem deve ter pelo menos 10 caracteres"]
                      consent: ["O consentimento de privacidade é obrigatório"]

        "429":
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds to wait before next request
              schema:
                type: integer
                example: 3600
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitError"
              examples:
                rate_limit:
                  summary: Too many submissions from IP
                  value:
                    success: false
                    message: "Muitas tentativas. Tente novamente em 1 hora."
                    error: "rate_limit_exceeded"
                    code: "RATE_LIMIT_ERROR"
                    retryAfter: 3600

        "422":
          description: Spam or suspicious activity detected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpamError"
              examples:
                spam_detected:
                  summary: Honeypot field filled (spam bot)
                  value:
                    success: false
                    message: "Envio suspeito detectado. Entre em contato diretamente se isso for um erro."
                    error: "spam_detected"
                    code: "SPAM_ERROR"

        "500":
          description: Internal server error (email service failure)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                server_error:
                  summary: Email service unavailable
                  value:
                    success: false
                    message: "Erro interno do servidor. Tente novamente em alguns minutos."
                    error: "internal_error"
                    code: "SERVER_ERROR"

        "503":
          description: Service temporarily unavailable
          headers:
            Retry-After:
              description: Seconds to wait before retrying
              schema:
                type: integer
                example: 300
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableError"

  /contact/health:
    get:
      summary: Health check for contact service
      description: Returns service health status and email delivery statistics
      operationId: getContactHealth
      tags:
        - Health Check

      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                    example: healthy
                  uptime:
                    type: number
                    description: Service uptime in seconds
                    example: 86400
                  emailService:
                    type: object
                    properties:
                      available:
                        type: boolean
                        example: true
                      lastCheck:
                        type: string
                        format: date-time
                        example: "2025-09-11T14:00:00Z"
                      deliveryRate:
                        type: number
                        description: 24h email delivery success rate
                        example: 0.999

components:
  schemas:
    ContactSubmission:
      type: object
      required:
        - name
        - email
        - message
        - consent
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          pattern: "^[a-zA-ZÀ-ÿ\\s'-]+$"
          description: Patient's full name
          example: "João Silva"

        email:
          type: string
          format: email
          maxLength: 255
          description: Patient's email address
          example: "joao.silva@email.com"

        phone:
          type: string
          pattern: "^\\+55\\s\\d{2}\\s\\d{4,5}-\\d{4}$"
          description: Brazilian phone number (optional)
          example: "+55 11 99999-9999"

        message:
          type: string
          minLength: 10
          maxLength: 1000
          description: Patient's inquiry or message
          example: "Gostaria de agendar uma consulta para avaliar minha visão."

        consent:
          type: boolean
          enum: [true]
          description: LGPD privacy consent (must be true)
          example: true

        website:
          type: string
          maxLength: 0
          description: Honeypot field (should remain empty)
          example: ""

    SuccessResponse:
      type: object
      required:
        - success
        - message
        - submissionId
      properties:
        success:
          type: boolean
          enum: [true]
          example: true

        message:
          type: string
          description: User-friendly success message in Portuguese
          example: "Sua mensagem foi enviada com sucesso! Dr. Philipe entrará em contato em breve."

        submissionId:
          type: string
          format: uuid
          description: Unique identifier for tracking purposes
          example: "550e8400-e29b-41d4-a716-446655440000"

        estimatedDelivery:
          type: string
          format: date-time
          description: Estimated email delivery time
          example: "2025-09-11T14:30:00Z"

    ValidationError:
      type: object
      required:
        - success
        - message
        - error
        - code
      properties:
        success:
          type: boolean
          enum: [false]
          example: false

        message:
          type: string
          description: General error message in Portuguese
          example: "Por favor, corrija os erros abaixo"

        error:
          type: string
          enum: [validation_failed]
          example: "validation_failed"

        code:
          type: string
          enum: [VALIDATION_ERROR]
          example: "VALIDATION_ERROR"

        fieldErrors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Field-specific validation errors
          example:
            email: ["Formato de email inválido"]
            message: ["A mensagem deve ter pelo menos 10 caracteres"]

    RateLimitError:
      type: object
      required:
        - success
        - message
        - error
        - code
        - retryAfter
      properties:
        success:
          type: boolean
          enum: [false]

        message:
          type: string
          description: Rate limit message in Portuguese
          example: "Muitas tentativas. Tente novamente em 1 hora."

        error:
          type: string
          enum: [rate_limit_exceeded]

        code:
          type: string
          enum: [RATE_LIMIT_ERROR]

        retryAfter:
          type: integer
          description: Seconds to wait before next request
          example: 3600

    SpamError:
      type: object
      required:
        - success
        - message
        - error
        - code
      properties:
        success:
          type: boolean
          enum: [false]

        message:
          type: string
          description: Spam detection message in Portuguese
          example: "Envio suspeito detectado. Entre em contato diretamente se isso for um erro."

        error:
          type: string
          enum: [spam_detected]

        code:
          type: string
          enum: [SPAM_ERROR]

    ServerError:
      type: object
      required:
        - success
        - message
        - error
        - code
      properties:
        success:
          type: boolean
          enum: [false]

        message:
          type: string
          description: Server error message in Portuguese
          example: "Erro interno do servidor. Tente novamente em alguns minutos."

        error:
          type: string
          enum: [internal_error, email_service_error, configuration_error]

        code:
          type: string
          enum: [SERVER_ERROR, EMAIL_ERROR, CONFIG_ERROR]

    ServiceUnavailableError:
      type: object
      required:
        - success
        - message
        - error
        - code
      properties:
        success:
          type: boolean
          enum: [false]

        message:
          type: string
          description: Service unavailable message in Portuguese
          example: "Serviço temporariamente indisponível. Tente novamente em alguns minutos."

        error:
          type: string
          enum: [service_unavailable]

        code:
          type: string
          enum: [SERVICE_UNAVAILABLE]

  securitySchemes:
    rateLimit:
      type: apiKey
      in: header
      name: X-RateLimit-Limit
      description: Rate limiting based on IP address (5 requests per hour)

tags:
  - name: Contact Form
    description: Patient contact form submission and email delivery
  - name: Health Check
    description: Service health monitoring endpoints
