# Saraiva Vision MySQL Configuration
# Optimized for medical applications with HIPAA compliance requirements

[mysql]
default-character-set = utf8mb4

[client]
port = 3306
default-character-set = utf8mb4

[mysqld]
# Basic Configuration
port = 3306
socket = /var/run/mysqld/mysqld.sock
pid-file = /var/run/mysqld/mysqld.pid
basedir = /usr
datadir = /var/lib/mysql
tmpdir = /tmp
lc-messages-dir = /usr/share/mysql
skip-external-locking

# Character Set for Medical Data (UTF-8 support for special characters)
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
init-connect = 'SET NAMES utf8mb4'
skip-character-set-client-handshake

# Security for Medical Applications
# Only allow local connections by default
bind-address = 0.0.0.0
skip-name-resolve
skip-networking = 0

# Medical Data Security
local-infile = 0
symbolic-links = 0
skip-show-database = 0

# Authentication Plugin for Medical Security
default-authentication-plugin = mysql_native_password

# Performance Optimization for Medical Workloads
max_connections = 1000
max_connect_errors = 100000
connect_timeout = 10
wait_timeout = 28800
interactive_timeout = 28800

# Query Cache for Medical Applications
# Note: query_cache_type is deprecated in MySQL 8.0 and removed
# Using InnoDB buffer pool for caching instead
query_cache_size = 64M
query_cache_limit = 2M
query_cache_min_res_unit = 4096

# Memory Settings for Medical Systems
innodb_buffer_pool_size = 512M
innodb_buffer_pool_instances = 1
innodb_log_file_size = 128M
innodb_log_buffer_size = 16M
innodb_flush_log_at_trx_commit = 1
innodb_flush_method = O_DIRECT
innodb_file_per_table = 1
innodb_open_files = 2000
innodb_table_locks = 2000
innodb_thread_concurrency = 8
innodb_commit_concurrency = 8
innodb_read_io_threads = 4
innodb_write_io_threads = 4

# Medical Data Integrity
innodb_doublewrite = 1
innodb_checksums = 1
innodb_file_format = Barracuda
innodb_file_format_max = Barracuda
innodb_large_prefix = 1
innodb_strict_mode = 1

# Medical Audit Trail
innodb_flush_log_at_trx_commit = 1
innodb_support_xa = 1
sync_binlog = 1

# Binary Logging for Medical Replication and Recovery
log-bin = mysql-bin
binlog_format = ROW
binlog_row_image = FULL
max_binlog_size = 1G
expire_logs_days = 7
sync_binlog = 1
binlog_cache_size = 1M
max_binlog_cache_size = 2G

# Slow Query Logging for Medical Performance Monitoring
slow_query_log = 1
slow_query_log_file = /var/log/mysql/slow.log
long_query_time = 2
log_queries_not_using_indexes = 1
log_slow_admin_statements = 1
log_slow_slave_statements = 1

# Error Logging for Medical System Monitoring
log_error = /var/log/mysql/error.log
log_warnings = 2

# Medical System Replication Settings
server-id = 1
log_slave_updates = 1
relay_log = mysql-relay-bin
relay_log_index = mysql-relay-bin.index
relay_log_info_file = mysql-relay-bin.info
master_info_file = mysql-master.info
relay_log_info_repository = TABLE
master_info_repository = TABLE

# Medical Data Backup and Recovery
innodb_buffer_pool_dump_at_shutdown = 1
innodb_buffer_pool_load_at_startup = 1
innodb_buffer_pool_dump_pct = 25

# Medical System Resource Management
thread_cache_size = 100
thread_stack = 256K
table_open_cache = 2000
table_definition_cache = 2000
open_files_limit = 65535

# Temporary Tables for Medical Queries
tmp_table_size = 64M
max_heap_table_size = 64M

# Medical Data Sorting Optimization
sort_buffer_size = 2M
read_buffer_size = 1M
read_rnd_buffer_size = 1M
join_buffer_size = 2M

# Medical System Connection Management
back_log = 500
max_allowed_packet = 64M

# Medical System Security Enhancements
# Enable SSL for medical data encryption
# ssl-ca = /etc/mysql/certs/ca.pem
# ssl-cert = /etc/mysql/certs/server-cert.pem
# ssl-key = /etc/mysql/certs/server-key.pem

# Medical Data Encryption at Rest
# plugin-load = keyring_file.so
# keyring_file_data = /etc/mysql/keyring/keyring

# Medical System Monitoring
performance_schema = 1
performance_schema_max_table_instances = 500
performance_schema_max_table_handles = 1000

# Emergency Medical System Settings
# In case of medical emergency, prioritize data integrity
innodb_flush_neighbors = 1
innodb_log_write_ahead_size = 8192
innodb_log_compressed_pages = 1
innodb_log_checksums = 1

# Medical System High Availability
innodb_read_only_compressed = 1
innodb_page_cleaners = 4
innodb_lru_scan_depth = 1024
innodb_page_size = 16K
innodb_io_capacity = 200
innodb_io_capacity_max = 2000

# Medical System Performance Tuning
innodb_adaptive_flushing = 1
innodb_adaptive_flushing_lwm = 10
innodb_adaptive_hash_index = 1
innodb_adaptive_max_sleep_delay = 150000

# Medical System Memory Management
innodb_old_blocks_time = 1000
innodb_old_blocks_pct = 37
innodb_stats_on_metadata = 0
innodb_stats_persistent = 1
innodb_stats_auto_recalc = 1
innodb_stats_persistent_sample_pages = 20

# Emergency Medical System Recovery
innodb_force_recovery = 0
innodb_fast_shutdown = 1

# Medical System Backup Configuration
# Automated backup settings for medical data
# backup-dir = /var/backups/mysql
# backup-retention = 30
# backup-compression = 1

# Medical System User Privileges
# Minimum privileges for medical applications
# CREATE USER 'medical_app'@'localhost' IDENTIFIED BY 'strong_password';
# GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE ON medical_database.* TO 'medical_app'@'localhost';
# FLUSH PRIVILEGES;

# Medical System Audit Trail
# Enable comprehensive logging for medical compliance
# general_log = 1
# general_log_file = /var/log/mysql/general.log
# log_output = FILE

# Emergency Medical System Alerts
# Configure alerts for critical medical system events
# critical_alerts = 1
# alert_threshold = 5
# alert_recipients = admin@saraivavision.com.br

# Medical System High Availability
# Configure replication for medical system reliability
# gtid_mode = ON
# enforce_gtid_consistency = ON
# master_info_repository = TABLE
# relay_log_info_repository = TABLE

# Medical System Security Best Practices
# Only necessary privileges for medical applications
# skip-grant-tables = 0
# secure_auth = 1
# local_infile = 0

# Medical System Performance Monitoring
# Enable comprehensive monitoring for medical applications
# performance_schema_instrument = '%'

# Emergency Medical System Shutdown
# Graceful shutdown to preserve medical data
# innodb_fast_shutdown = 1